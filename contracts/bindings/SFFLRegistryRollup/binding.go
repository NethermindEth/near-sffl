// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractSFFLRegistryRollup

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// OperatorSetUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type OperatorSetUpdateMessage struct {
	Id        uint64
	Timestamp uint64
	Operators []OperatorsOperator
}

// OperatorsOperator is an auto generated low-level Go binding around an user-defined struct.
type OperatorsOperator struct {
	Pubkey BN254G1Point
	Weight *big.Int
}

// OperatorsSignatureInfo is an auto generated low-level Go binding around an user-defined struct.
type OperatorsSignatureInfo struct {
	NonSignerPubkeyHashes [][32]byte
	ApkG2                 BN254G2Point
	Sigma                 BN254G1Point
}

// SFFLRegistryBaseProofParams is an auto generated low-level Go binding around an user-defined struct.
type SFFLRegistryBaseProofParams struct {
	Target             common.Address
	StorageKey         [32]byte
	StateTrieWitness   []byte
	StorageTrieWitness []byte
}

// StateRootUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type StateRootUpdateMessage struct {
	RollupId    uint32
	BlockHeight uint64
	Timestamp   uint64
	StateRoot   [32]byte
}

// ContractSFFLRegistryRollupMetaData contains all meta data concerning the ContractSFFLRegistryRollup contract.
var ContractSFFLRegistryRollupMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"operators\",\"type\":\"tuple[]\",\"internalType\":\"structOperators.Operator[]\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weight\",\"type\":\"uint128\",\"internalType\":\"uint128\"}]},{\"name\":\"quorumThreshold\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"operatorUpdateId\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"THRESHOLD_DENOMINATOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"getApk\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorWeight\",\"inputs\":[{\"name\":\"pubkeyHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getQuorumThreshold\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStateRoot\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTotalWeight\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"nextOperatorUpdateId\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setQuorumThreshold\",\"inputs\":[{\"name\":\"newQuorumThreshold\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAndGetStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"agreement\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateOperatorSet\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structOperatorSetUpdate.Message\",\"components\":[{\"name\":\"id\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"operators\",\"type\":\"tuple[]\",\"internalType\":\"structOperators.Operator[]\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weight\",\"type\":\"uint128\",\"internalType\":\"uint128\"}]}]},{\"name\":\"signatureInfo\",\"type\":\"tuple\",\"internalType\":\"structOperators.SignatureInfo\",\"components\":[{\"name\":\"nonSignerPubkeyHashes\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateStateRoot\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"signatureInfo\",\"type\":\"tuple\",\"internalType\":\"structOperators.SignatureInfo\",\"components\":[{\"name\":\"nonSignerPubkeyHashes\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StateRootUpdated\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"indexed\":true,\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false}]",
	Bin: "0x60806040523480156200001157600080fd5b5060405162003da438038062003da4833981016040819052620000349162000674565b6200003f3362000085565b6200005c83836002620000d760201b6200075e179092919060201c565b600680546001600160401b0319166001600160401b039290921691909117905550620008839050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620000e38383620000f4565b620000ef838262000394565b505050565b604080516080810182526000918101828152606082018390528152602081019190915260408051808201909152600184015481526002840154602082015260038401546001600160801b031660005b84518110156200035957848181518110620001625762000162620007a3565b6020026020010151935060006200018885600001516200044f60201b620007771760201c565b60008181526020898152604090912060020154908701519192506001600160801b039081169116811415620002045760405162461bcd60e51b815260206004820152601660248201527f4f70657261746f7220697320757020746f20646174650000000000000000000060448201526064015b60405180910390fd5b6020860151620002158286620007cf565b620002219190620007fa565b6020878101516000858152918b9052604090912060020180546001600160801b0319166001600160801b0392831617905590945081166200029f578551600083815260208a815260409091208251815591810151600190920191909155865162000297918791906200078e62000466821b17901c565b9450620002fe565b60208601516001600160801b0316620002fe57620002e5620002d087600001516200050f60201b620008311760201c565b866200046660201b6200078e1790919060201c565b6040805180820190915260008082526020820152875294505b6020808701516040516001600160801b03909116815283917f7714c619c02393ccf44c3de606bec5c80ae7a6077504b74887fb39f335e98adc910160405180910390a250508080620003509062000828565b91505062000143565b506003850180546001600160801b0319166001600160801b039290921691909117905580516001850155602001516002909301929092555050565b60646001600160801b0382161115620004025760405162461bcd60e51b815260206004820152602960248201527f51756f72756d207468726573686f6c642067726561746572207468616e2064656044820152683737b6b4b730ba37b960b91b6064820152608401620001fb565b6003820180546001600160801b03808416600160801b810291909216179091556040517f2b71b2179969a005ac6fd9c196134b364ff40069a17dd72faa96c4a00e73e9f490600090a25050565b805160009081526020918201519091526040902090565b604080518082019091526000808252602082015262000484620005b2565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa9050808015620004c557620004c7565bfe5b5080620005075760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b6044820152606401620001fb565b505092915050565b604080518082019091526000808252602082015281511580156200053557506020820151155b1562000554575050604080518082019091526000808252602082015290565b60405180604001604052808360000151815260200160008051602062003d8483398151915284602001516200058a919062000846565b620005a59060008051602062003d8483398151915262000869565b905292915050565b919050565b60405180608001604052806004906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200060b576200060b620005d0565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200063c576200063c620005d0565b604052919050565b80516001600160801b0381168114620005ad57600080fd5b80516001600160401b0381168114620005ad57600080fd5b600080600060608085870312156200068b57600080fd5b84516001600160401b0380821115620006a357600080fd5b818701915087601f830112620006b857600080fd5b8151602082821115620006cf57620006cf620005d0565b620006df818360051b0162000611565b828152818101935091850284018101918a831115620006fd57600080fd5b938101935b828510156200077657848b03868112156200071d5760008081fd5b62000727620005e6565b604080831215620007385760008081fd5b62000742620005e6565b92508751835284880151858401528282526200076081890162000644565b8286015250855250938501939281019262000702565b97506200078589820162000644565b965050505050506200079a604085016200065c565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001600160801b0383811690831681811015620007f257620007f2620007b9565b039392505050565b60006001600160801b038281168482168083038211156200081f576200081f620007b9565b01949350505050565b60006000198214156200083f576200083f620007b9565b5060010190565b6000826200086457634e487b7160e01b600052601260045260246000fd5b500690565b6000828210156200087e576200087e620007b9565b500390565b6134f180620008936000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063dd64766e11610066578063dd64766e1461021f578063e0f5d9f014610232578063ef0244581461025d578063f2fde38b1461026457600080fd5b80638da5cb5b146101bd578063b3a9e53b146101d8578063b708c083146101f9578063ccd3bd9e1461020c57600080fd5b806344a74c90116100d357806344a74c901461014c5780634afa71b91461015f5780636f5b991814610177578063715018a6146101b557600080fd5b806306aba0e1146100fa5780632db52ea51461012457806343633b0f14610139575b600080fd5b6005546001600160801b03165b6040516001600160801b0390911681526020015b60405180910390f35b610137610132366004612c64565b610277565b005b610137610147366004612c97565b61028d565b61013761015a366004612d14565b6103f4565b600554600160801b90046001600160801b0316610107565b60408051808201825260008082526020918201528151808301835260035480825260045491830191825283519081529051918101919091520161011b565b610137610467565b6001546040516001600160a01b03909116815260200161011b565b6101eb6101e6366004612d83565b61047b565b60405190815260200161011b565b6101eb610207366004612db6565b6104aa565b6101eb61021a366004612e58565b61056a565b61010761022d366004612e9c565b6106c8565b600654610245906001600160401b031681565b6040516001600160401b03909116815260200161011b565b6064610107565b610137610272366004612eb5565b6106e8565b61027f6108cc565b61028a600282610926565b50565b6006546001600160401b03166102a66020840184612ede565b6001600160401b0316146102f45760405162461bcd60e51b815260206004820152601060248201526f15dc9bdb99c81b595cdcd859d948125160821b60448201526064015b60405180910390fd5b610309610300836109df565b60029083610a0f565b6103465760405162461bcd60e51b815260206004820152600e60248201526d145d5bdc9d5b481b9bdd081b595d60921b60448201526064016102eb565b6103536020830183612ede565b61035e906001612f0f565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556103f061038f6040840184612f3a565b808060200260200160405190810160405280939291908181526020016000905b828210156103db576103cc60608302860136819003810190612ff7565b815260200190600101906103af565b50505050506002610ced90919063ffffffff16565b5050565b61040061030083610f4b565b61043d5760405162461bcd60e51b815260206004820152600e60248201526d145d5bdc9d5b481b9bdd081b595d60921b60448201526064016102eb565b6103f061044d6020840184613035565b61045d6040850160208601612ede565b8460600135610f5e565b61046f6108cc565b6104796000610fc2565b565b63ffffffff82166000908152602081815260408083206001600160401b03851684529091529020545b92915050565b60008080806104bc6020890189613035565b63ffffffff1663ffffffff16815260200190815260200160002060008760200160208101906104eb9190612ede565b6001600160401b03168152602081019190915260400160002054905080610556578261054b5760405162461bcd60e51b815260206004820152600f60248201526e115b5c1d1e481859dc99595b595b9d608a1b60448201526064016102eb565b610556868585611014565b610560868661056a565b9695505050505050565b600080808061057c6020870187613035565b63ffffffff1663ffffffff16815260200190815260200160002060008560200160208101906105ab9190612ede565b6001600160401b03166001600160401b03168152602001908152602001600020549050836060013581146106215760405162461bcd60e51b815260206004820152601760248201527f4d69736d61746368696e6720737461746520726f6f747300000000000000000060448201526064016102eb565b6106c06106316020850185612eb5565b6020850135836106446040880188613050565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610686925050506060890189613050565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102592505050565b949350505050565b6000818152600260208190526040822001546001600160801b03166104a4565b6106f06108cc565b6001600160a01b0381166107555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102eb565b61028a81610fc2565b6107688383610ced565b6107728382610926565b505050565b805160009081526020918201519091526040902090565b60408051808201909152600080825260208201526107aa612b73565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa90508080156107e9576107eb565bfe5b50806108295760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016102eb565b505092915050565b6040805180820190915260008082526020820152815115801561085657506020820151155b15610874575050604080518082019091526000808252602082015290565b60405180604001604052808360000151815260200160008051602061349c83398151915284602001516108a791906130c2565b6108bf9060008051602061349c8339815191526130d6565b905292915050565b919050565b6001546001600160a01b031633146104795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102eb565b60646001600160801b03821611156109925760405162461bcd60e51b815260206004820152602960248201527f51756f72756d207468726573686f6c642067726561746572207468616e2064656044820152683737b6b4b730ba37b960b91b60648201526084016102eb565b6003820180546001600160801b03808416600160801b810291909216179091556040517f2b71b2179969a005ac6fd9c196134b364ff40069a17dd72faa96c4a00e73e9f490600090a25050565b6000816040516020016109f291906130ed565b604051602081830303815290604052805190602001209050919050565b604080518082018252600080825260208083018290526003870154845160808101865294850183815260608601849052855290840182905290926001600160801b039091169060005b610a6286806131c5565b9050811015610bae578015610b0557610a7b86806131c5565b610a866001846130d6565b818110610a9557610a95613096565b60200291909101359050610aa987806131c5565b83818110610ab957610ab9613096565b9050602002013560001c11610b055760405162461bcd60e51b8152602060048201526012602482015271141d589ad95e5cc81b9bdd081cdbdc9d195960721b60448201526064016102eb565b876000610b1288806131c5565b84818110610b2257610b22613096565b6020908102929092013583525081810192909252604090810160002081516080810183528154928101928352600182015460608201528281526002909101546001600160801b031692810192909252909250610b7f90859061078e565b935081602001516001600160801b031683610b9a91906130d6565b925080610ba68161320e565b915050610a58565b50610bdc610bbb84610831565b6040805180820190915260018a0154815260028a015460208201529061078e565b9250600080610c0f8886610bf8368b90038b0160208c01613298565b610c0a368c90038c0160a08d016132cb565b611160565b9150915081610c605760405162461bcd60e51b815260206004820152601e60248201527f50616972696e6720707265636f6d70696c652063616c6c206661696c6564000060448201526064016102eb565b80610ca45760405162461bcd60e51b815260206004820152601460248201527314da59db985d1d5c99481a5cc81a5b9d985b1a5960621b60448201526064016102eb565b6003890154606490610cc8906001600160801b03600160801b8204811691166132e7565b610cd29190613316565b6001600160801b0316841015955050505050505b9392505050565b604080516080810182526000918101828152606082018390528152602081019190915260408051808201909152600184015481526002840154602082015260038401546001600160801b031660005b8451811015610f1057848181518110610d5757610d57613096565b602002602001015193506000610d828560000151805160009081526020918201519091526040902090565b60008181526020898152604090912060020154908701519192506001600160801b039081169116811415610df15760405162461bcd60e51b81526020600482015260166024820152754f70657261746f7220697320757020746f206461746560501b60448201526064016102eb565b6020860151610e00828661333c565b610e0a9190613364565b6020878101516000858152918b9052604090912060020180546001600160801b0319166001600160801b039283161790559094508116610e76578551600083815260208a81526040909120825181559101516001909101558551610e6f90869061078e565b9450610eb8565b60208601516001600160801b0316610eb857610e9f610e988760000151610831565b869061078e565b6040805180820190915260008082526020820152875294505b6020808701516040516001600160801b03909116815283917f7714c619c02393ccf44c3de606bec5c80ae7a6077504b74887fb39f335e98adc910160405180910390a250508080610f089061320e565b915050610d3c565b506003850180546001600160801b0319166001600160801b039290921691909117905580516001850155602001516002909301929092555050565b6000816040516020016109f29190613386565b63ffffffff83166000818152602081815260408083206001600160401b03871680855290835292819020859055518481529192917fca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8910160405180910390a3505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8161101f84826103f4565b50505050565b6040516bffffffffffffffffffffffff19606087901b166020820152600090819081906110659060340160405160208183030381529060405286886112e3565b91509150816110af5760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d08191bd95cc81b9bdd08195e1a5cdd60521b60448201526064016102eb565b60006110ba8261130c565b90506000806110ef8a6040516020016110d591815260200190565b6040516020818303038152906040528885604001516112e3565b91509150816111405760405162461bcd60e51b815260206004820152601c60248201527f53746f726167652076616c756520646f6573206e6f742065786973740000000060448201526064016102eb565b61115161114c826113d0565b611403565b9b9a5050505050505050505050565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001878760000151886020015188600001516000600281106111a8576111a8613096565b60200201518951600160200201518a602001516000600281106111cd576111cd613096565b60200201518b602001516001600281106111e9576111e9613096565b602090810291909101518c518d8301516040516112469a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c61126991906130c2565b90506112d561127b610e988884611432565b6112836114ba565b6112cb6112bc856112b6604080518082018252600080825260209182015281518083019092526001825260029082015290565b90611432565b6112c58c61157a565b9061078e565b886201d4c061160a565b909890975095505050505050565b6000606060006112f28661182e565b90506112ff818686611860565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906113398361193b565b905060405180608001604052806113698360008151811061135c5761135c613096565b602002602001015161196e565b81526020016113848360018151811061135c5761135c613096565b81526020016113ac8360028151811061139f5761139f613096565b6020026020010151611975565b81526020016113c78360038151811061139f5761139f613096565b90529392505050565b6040805180820182526000808252602091820152815180830190925282518252808301908201526060906104a490611a77565b600080600060208451111561141957602061141c565b83515b60209485015194036008029390931c9392505050565b604080518082019091526000808252602082015261144e612b91565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa90508080156107e95750806108295760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016102eb565b6114c2612baf565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820190915260008082526020820152600080806115aa60008051602061349c833981519152866130c2565b90505b6115b681611b07565b909350915060008051602061349c8339815191528283098314156115f0576040805180820190915290815260208101919091529392505050565b60008051602061349c8339815191526001820890506115ad565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061163c612bd4565b60005b60028110156118015760006116558260066133dc565b905084826002811061166957611669613096565b6020020151518361167b8360006133fb565b600c811061168b5761168b613096565b60200201528482600281106116a2576116a2613096565b602002015160200151838260016116b991906133fb565b600c81106116c9576116c9613096565b60200201528382600281106116e0576116e0613096565b60200201515151836116f38360026133fb565b600c811061170357611703613096565b602002015283826002811061171a5761171a613096565b60200201515160016020020151836117338360036133fb565b600c811061174357611743613096565b602002015283826002811061175a5761175a613096565b60200201516020015160006002811061177557611775613096565b6020020151836117868360046133fb565b600c811061179657611796613096565b60200201528382600281106117ad576117ad613096565b6020020151602001516001600281106117c8576117c8613096565b6020020151836117d98360056133fb565b600c81106117e9576117e9613096565b602002015250806117f98161320e565b91505061163f565b5061180a612bf3565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b6060818051906020012060405160200161184a91815260200190565b6040516020818303038152906040529050919050565b60006060600061186f85611b89565b90506000806000611881848a89611c83565b815192955090935091501580806118955750815b6118e15760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016102eb565b6000816118fd5760405180602001604052806000815250611929565b6119298661190c6001886130d6565b8151811061191c5761191c613096565b60200260200101516120a7565b919b919a509098505050505050505050565b6040805180820182526000808252602091820152815180830190925282518252808301908201526060906104a4906120d1565b60006104a4825b60006021826000015111156119cc5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016102eb565b60008060006119da856122bd565b9194509250905060008160018111156119f5576119f5613413565b14611a425760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016102eb565b6000838660200151611a5491906133fb565b805190915060208410156105605760208490036101000a90049695505050505050565b60606000806000611a87856122bd565b919450925090506000816001811115611aa257611aa2613413565b14611aef5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016102eb565b611afe85602001518484612607565b95945050505050565b6000808060008051602061349c833981519152600360008051602061349c8339815191528660008051602061349c833981519152888909090890506000611b7d827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f5260008051602061349c8339815191526126e5565b91959194509092505050565b60606000611b968361193b565b9050600081516001600160401b03811115611bb357611bb3612f89565b604051908082528060200260200182016040528015611bf857816020015b6040805180820190915260608082526020820152815260200190600190039081611bd15790505b50905060005b8251811015611c7b576000611c2b848381518110611c1e57611c1e613096565b6020026020010151611a77565b90506040518060400160405280828152602001611c478361193b565b815250838381518110611c5c57611c5c613096565b6020026020010181905250508080611c739061320e565b915050611bfe565b509392505050565b60006060818080611c938761278d565b90506000869050600080611cba604051806040016040528060608152602001606081525090565b60005b8c5181101561207f578c8181518110611cd857611cd8613096565b602002602001015191508284611cee91906133fb565b9350611cfb6001886133fb565b965083611d5357815180516020909101208514611d4e5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016102eb565b611e10565b815151602011611db557815180516020909101208514611d4e5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016102eb565b84611dc383600001516128c7565b14611e105760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016102eb565b611e1c601060016133fb565b8260200151511415611e95578551841415611e365761207f565b6000868581518110611e4a57611e4a613096565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611e7557611e75613096565b60200260200101519050611e88816128ef565b965060019450505061206d565b60028260200151511415612025576000611eae83612925565b9050600081600081518110611ec557611ec5613096565b016020015160f81c90506000611edc600283613429565b611ee790600261344b565b90506000611ef8848360ff16612949565b90506000611f068b8a612949565b90506000611f14838361297f565b905060ff851660021480611f2b575060ff85166003145b15611f6557808351148015611f405750808251145b15611f5257611f4f818b6133fb565b99505b50600160ff1b995061207f945050505050565b60ff85161580611f78575060ff85166001145b15611fce5782518114611f985750600160ff1b995061207f945050505050565b611fbf8860200151600181518110611fb257611fb2613096565b60200260200101516128ef565b9a50975061206d945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016102eb565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016102eb565b806120778161320e565b915050611cbd565b50600160ff1b8414866120928786612949565b909e909d50909b509950505050505050505050565b602081015180516060916104a4916120c1906001906130d6565b81518110611c1e57611c1e613096565b60606000806120df846122bd565b919350909150600190508160018111156120fb576120fb613413565b146121485760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016102eb565b6040805160208082526104208201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816121615790505090506000835b86518110156122b257602082106121fa5760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016102eb565b6000806122376040518060400160405280858c6000015161221b91906130d6565b8152602001858c6020015161223091906133fb565b90526122bd565b50915091506040518060400160405280838361225391906133fb565b8152602001848b6020015161226891906133fb565b81525085858151811061227d5761227d613096565b60209081029190910101526122936001856133fb565b935061229f81836133fb565b6122a990846133fb565b9250505061218e565b508152949350505050565b6000806000808460000151116123155760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016102eb565b6020840151805160001a607f811161233a576000600160009450945094505050612600565b60b781116123b657600061234f6080836130d6565b9050808760000151116123a45760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016102eb565b60019550935060009250612600915050565b60bf81116124a55760006123cb60b7836130d6565b9050808760000151116124205760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016102eb565b600183015160208290036101000a900461243a81836133fb565b8851116124895760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016102eb565b6124948260016133fb565b965094506000935061260092505050565b60f781116125205760006124ba60c0836130d6565b90508087600001511161250f5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016102eb565b600195509350849250612600915050565b600061252d60f7836130d6565b9050808760000151116125825760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016102eb565b600183015160208290036101000a900461259c81836133fb565b8851116125e45760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016102eb565b6125ef8260016133fb565b965094506001935061260092505050565b9193909250565b60606000826001600160401b0381111561262357612623612f89565b6040519080825280601f01601f19166020018201604052801561264d576020820181803683370190505b509050805160001415612661579050610ce6565b600061266d85876133fb565b90506020820160005b61268160208761346e565b8110156126b857825182526126976020846133fb565b92506126a46020836133fb565b9150806126b08161320e565b915050612676565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6000806126f0612bf3565b6126f8612c11565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa92508280156107e95750826127825760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016102eb565b505195945050505050565b606060008251600261279f91906133dc565b6001600160401b038111156127b6576127b6612f89565b6040519080825280601f01601f1916602001820160405280156127e0576020820181803683370190505b50905060005b83518110156128c057600484828151811061280357612803613096565b01602001516001600160f81b031916901c826128208360026133dc565b8151811061283057612830613096565b60200101906001600160f81b031916908160001a905350601084828151811061285b5761285b613096565b016020015161286d919060f81c613429565b60f81b8261287c8360026133dc565b6128879060016133fb565b8151811061289757612897613096565b60200101906001600160f81b031916908160001a905350806128b88161320e565b9150506127e6565b5092915050565b60006020825110156128db57506020015190565b818060200190518101906104a49190613482565b6000606060208360000151101561291057612909836129fb565b905061291c565b61291983611a77565b90505b610ce6816128c7565b60606104a46129448360200151600081518110611c1e57611c1e613096565b61278d565b60608251821061296857506040805160208101909152600081526104a4565b610ce6838384865161297a91906130d6565b612a06565b6000805b8084511180156129935750808351115b80156129e457508281815181106129ac576129ac613096565b602001015160f81c60f81b6001600160f81b0319168482815181106129d3576129d3613096565b01602001516001600160f81b031916145b15610ce657806129f38161320e565b915050612983565b60606104a482612b5d565b606081612a1481601f6133fb565b1015612a535760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016102eb565b82612a5e83826133fb565b1015612a9d5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016102eb565b612aa782846133fb565b84511015612aeb5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016102eb565b606082158015612b0a5760405191506000825260208201604052612b54565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612b43578051835260209283019201612b2b565b5050858452601f01601f1916604052505b50949350505050565b60606104a4826020015160008460000151612607565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b6040518060400160405280612bc2612c2f565b8152602001612bcf612c2f565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b80356001600160801b03811681146108c757600080fd5b600060208284031215612c7657600080fd5b610ce682612c4d565b600060e08284031215612c9157600080fd5b50919050565b60008060408385031215612caa57600080fd5b82356001600160401b0380821115612cc157600080fd5b9084019060608287031215612cd557600080fd5b90925060208401359080821115612ceb57600080fd5b50612cf885828601612c7f565b9150509250929050565b600060808284031215612c9157600080fd5b60008060a08385031215612d2757600080fd5b612d318484612d02565b915060808301356001600160401b03811115612d4c57600080fd5b612cf885828601612c7f565b803563ffffffff811681146108c757600080fd5b80356001600160401b03811681146108c757600080fd5b60008060408385031215612d9657600080fd5b612d9f83612d58565b9150612dad60208401612d6c565b90509250929050565b60008060008060c08587031215612dcc57600080fd5b612dd68686612d02565b935060808501356001600160401b0380821115612df257600080fd5b612dfe88838901612d02565b945060a0870135915080821115612e1457600080fd5b818701915087601f830112612e2857600080fd5b813581811115612e3757600080fd5b886020828501011115612e4957600080fd5b95989497505060200194505050565b60008060a08385031215612e6b57600080fd5b612e758484612d02565b915060808301356001600160401b03811115612e9057600080fd5b612cf885828601612d02565b600060208284031215612eae57600080fd5b5035919050565b600060208284031215612ec757600080fd5b81356001600160a01b0381168114610ce657600080fd5b600060208284031215612ef057600080fd5b610ce682612d6c565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03808316818516808303821115612f3157612f31612ef9565b01949350505050565b6000808335601e19843603018112612f5157600080fd5b8301803591506001600160401b03821115612f6b57600080fd5b6020019150606081023603821315612f8257600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612fc157612fc1612f89565b60405290565b600060408284031215612fd957600080fd5b612fe1612f9f565b9050813581526020820135602082015292915050565b60006060828403121561300957600080fd5b613011612f9f565b61301b8484612fc7565b815261302960408401612c4d565b60208201529392505050565b60006020828403121561304757600080fd5b610ce682612d58565b6000808335601e1984360301811261306757600080fd5b8301803591506001600160401b0382111561308157600080fd5b602001915036819003821315612f8257600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826130d1576130d16130ac565b500690565b6000828210156130e8576130e8612ef9565b500390565b60006020808352608083016001600160401b038061310a87612d6c565b168386015261311a838701612d6c565b604082821681880152808801359150601e1988360301821261313b57600080fd5b9087019081358381111561314e57600080fd5b60609350838102360389131561316357600080fd5b87840184905293849052908401926000919060a088015b818410156131b8578535815286860135878201526001600160801b036131a1848801612c4d565b16818401529484019460019390930192840161317a565b9998505050505050505050565b6000808335601e198436030181126131dc57600080fd5b8301803591506001600160401b038211156131f657600080fd5b6020019150600581901b3603821315612f8257600080fd5b600060001982141561322257613222612ef9565b5060010190565b600082601f83011261323a57600080fd5b604051604081018181106001600160401b038211171561325c5761325c612f89565b806040525080604084018581111561327357600080fd5b845b8181101561328d578035835260209283019201613275565b509195945050505050565b6000608082840312156132aa57600080fd5b6132b2612f9f565b6132bc8484613229565b81526130298460408501613229565b6000604082840312156132dd57600080fd5b610ce68383612fc7565b60006001600160801b038083168185168183048111821515161561330d5761330d612ef9565b02949350505050565b60006001600160801b0380841680613330576133306130ac565b92169190910492915050565b60006001600160801b038381169083168181101561335c5761335c612ef9565b039392505050565b60006001600160801b03808316818516808303821115612f3157612f31612ef9565b6080810163ffffffff61339884612d58565b1682526133a760208401612d6c565b6001600160401b038082166020850152806133c460408701612d6c565b16604085015250506060830135606083015292915050565b60008160001904831182151516156133f6576133f6612ef9565b500290565b6000821982111561340e5761340e612ef9565b500190565b634e487b7160e01b600052602160045260246000fd5b600060ff83168061343c5761343c6130ac565b8060ff84160691505092915050565b600060ff821660ff84168082101561346557613465612ef9565b90039392505050565b60008261347d5761347d6130ac565b500490565b60006020828403121561349457600080fd5b505191905056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a2646970667358221220177442f982124a78e7d7e4fc6d22fa39f254dddfa112b8c7afb7257180ee735764736f6c634300080c003330644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47",
}

// ContractSFFLRegistryRollupABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractSFFLRegistryRollupMetaData.ABI instead.
var ContractSFFLRegistryRollupABI = ContractSFFLRegistryRollupMetaData.ABI

// ContractSFFLRegistryRollupBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractSFFLRegistryRollupMetaData.Bin instead.
var ContractSFFLRegistryRollupBin = ContractSFFLRegistryRollupMetaData.Bin

// DeployContractSFFLRegistryRollup deploys a new Ethereum contract, binding an instance of ContractSFFLRegistryRollup to it.
func DeployContractSFFLRegistryRollup(auth *bind.TransactOpts, backend bind.ContractBackend, operators []OperatorsOperator, quorumThreshold *big.Int, operatorUpdateId uint64) (common.Address, *types.Transaction, *ContractSFFLRegistryRollup, error) {
	parsed, err := ContractSFFLRegistryRollupMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractSFFLRegistryRollupBin), backend, operators, quorumThreshold, operatorUpdateId)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractSFFLRegistryRollup{ContractSFFLRegistryRollupCaller: ContractSFFLRegistryRollupCaller{contract: contract}, ContractSFFLRegistryRollupTransactor: ContractSFFLRegistryRollupTransactor{contract: contract}, ContractSFFLRegistryRollupFilterer: ContractSFFLRegistryRollupFilterer{contract: contract}}, nil
}

// ContractSFFLRegistryRollup is an auto generated Go binding around an Ethereum contract.
type ContractSFFLRegistryRollup struct {
	ContractSFFLRegistryRollupCaller     // Read-only binding to the contract
	ContractSFFLRegistryRollupTransactor // Write-only binding to the contract
	ContractSFFLRegistryRollupFilterer   // Log filterer for contract events
}

// ContractSFFLRegistryRollupCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractSFFLRegistryRollupFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSFFLRegistryRollupSession struct {
	Contract     *ContractSFFLRegistryRollup // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractSFFLRegistryRollupCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractSFFLRegistryRollupCallerSession struct {
	Contract *ContractSFFLRegistryRollupCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractSFFLRegistryRollupTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractSFFLRegistryRollupTransactorSession struct {
	Contract     *ContractSFFLRegistryRollupTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractSFFLRegistryRollupRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupRaw struct {
	Contract *ContractSFFLRegistryRollup // Generic contract binding to access the raw methods on
}

// ContractSFFLRegistryRollupCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupCallerRaw struct {
	Contract *ContractSFFLRegistryRollupCaller // Generic read-only contract binding to access the raw methods on
}

// ContractSFFLRegistryRollupTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupTransactorRaw struct {
	Contract *ContractSFFLRegistryRollupTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractSFFLRegistryRollup creates a new instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollup(address common.Address, backend bind.ContractBackend) (*ContractSFFLRegistryRollup, error) {
	contract, err := bindContractSFFLRegistryRollup(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollup{ContractSFFLRegistryRollupCaller: ContractSFFLRegistryRollupCaller{contract: contract}, ContractSFFLRegistryRollupTransactor: ContractSFFLRegistryRollupTransactor{contract: contract}, ContractSFFLRegistryRollupFilterer: ContractSFFLRegistryRollupFilterer{contract: contract}}, nil
}

// NewContractSFFLRegistryRollupCaller creates a new read-only instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupCaller(address common.Address, caller bind.ContractCaller) (*ContractSFFLRegistryRollupCaller, error) {
	contract, err := bindContractSFFLRegistryRollup(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupCaller{contract: contract}, nil
}

// NewContractSFFLRegistryRollupTransactor creates a new write-only instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractSFFLRegistryRollupTransactor, error) {
	contract, err := bindContractSFFLRegistryRollup(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupTransactor{contract: contract}, nil
}

// NewContractSFFLRegistryRollupFilterer creates a new log filterer instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractSFFLRegistryRollupFilterer, error) {
	contract, err := bindContractSFFLRegistryRollup(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupFilterer{contract: contract}, nil
}

// bindContractSFFLRegistryRollup binds a generic wrapper to an already deployed contract.
func bindContractSFFLRegistryRollup(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractSFFLRegistryRollupMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLRegistryRollup.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.contract.Transact(opts, method, params...)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) THRESHOLDDENOMINATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "THRESHOLD_DENOMINATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.THRESHOLDDENOMINATOR(&_ContractSFFLRegistryRollup.CallOpts)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.THRESHOLDDENOMINATOR(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetApk(opts *bind.CallOpts) (BN254G1Point, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getApk")

	if err != nil {
		return *new(BN254G1Point), err
	}

	out0 := *abi.ConvertType(out[0], new(BN254G1Point)).(*BN254G1Point)

	return out0, err

}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetApk() (BN254G1Point, error) {
	return _ContractSFFLRegistryRollup.Contract.GetApk(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetApk() (BN254G1Point, error) {
	return _ContractSFFLRegistryRollup.Contract.GetApk(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetOperatorWeight(opts *bind.CallOpts, pubkeyHash [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getOperatorWeight", pubkeyHash)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetOperatorWeight(pubkeyHash [32]byte) (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetOperatorWeight(&_ContractSFFLRegistryRollup.CallOpts, pubkeyHash)
}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetOperatorWeight(pubkeyHash [32]byte) (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetOperatorWeight(&_ContractSFFLRegistryRollup.CallOpts, pubkeyHash)
}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetQuorumThreshold(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getQuorumThreshold")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetQuorumThreshold() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetQuorumThreshold(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetQuorumThreshold() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetQuorumThreshold(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetStateRoot(opts *bind.CallOpts, rollupId uint32, blockHeight uint64) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getStateRoot", rollupId, blockHeight)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStateRoot(&_ContractSFFLRegistryRollup.CallOpts, rollupId, blockHeight)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStateRoot(&_ContractSFFLRegistryRollup.CallOpts, rollupId, blockHeight)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetStorageValue(opts *bind.CallOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getStorageValue", message, proofParams)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStorageValue(&_ContractSFFLRegistryRollup.CallOpts, message, proofParams)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStorageValue(&_ContractSFFLRegistryRollup.CallOpts, message, proofParams)
}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetTotalWeight(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getTotalWeight")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetTotalWeight() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetTotalWeight(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetTotalWeight() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetTotalWeight(&_ContractSFFLRegistryRollup.CallOpts)
}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) NextOperatorUpdateId(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "nextOperatorUpdateId")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) NextOperatorUpdateId() (uint64, error) {
	return _ContractSFFLRegistryRollup.Contract.NextOperatorUpdateId(&_ContractSFFLRegistryRollup.CallOpts)
}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) NextOperatorUpdateId() (uint64, error) {
	return _ContractSFFLRegistryRollup.Contract.NextOperatorUpdateId(&_ContractSFFLRegistryRollup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Owner() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.Owner(&_ContractSFFLRegistryRollup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) Owner() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.Owner(&_ContractSFFLRegistryRollup.CallOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.RenounceOwnership(&_ContractSFFLRegistryRollup.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.RenounceOwnership(&_ContractSFFLRegistryRollup.TransactOpts)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) SetQuorumThreshold(opts *bind.TransactOpts, newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "setQuorumThreshold", newQuorumThreshold)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) SetQuorumThreshold(newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetQuorumThreshold(&_ContractSFFLRegistryRollup.TransactOpts, newQuorumThreshold)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) SetQuorumThreshold(newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetQuorumThreshold(&_ContractSFFLRegistryRollup.TransactOpts, newQuorumThreshold)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.TransferOwnership(&_ContractSFFLRegistryRollup.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.TransferOwnership(&_ContractSFFLRegistryRollup.TransactOpts, newOwner)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateAndGetStorageValue(opts *bind.TransactOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateAndGetStorageValue", message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateAndGetStorageValue(&_ContractSFFLRegistryRollup.TransactOpts, message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateAndGetStorageValue(&_ContractSFFLRegistryRollup.TransactOpts, message, proofParams, agreement)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x43633b0f.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, (bytes32[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateOperatorSet(opts *bind.TransactOpts, message OperatorSetUpdateMessage, signatureInfo OperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateOperatorSet", message, signatureInfo)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x43633b0f.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, (bytes32[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateOperatorSet(message OperatorSetUpdateMessage, signatureInfo OperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateOperatorSet(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x43633b0f.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, (bytes32[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateOperatorSet(message OperatorSetUpdateMessage, signatureInfo OperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateOperatorSet(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x44a74c90.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (bytes32[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateStateRoot(opts *bind.TransactOpts, message StateRootUpdateMessage, signatureInfo OperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateStateRoot", message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x44a74c90.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (bytes32[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateStateRoot(message StateRootUpdateMessage, signatureInfo OperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateStateRoot(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x44a74c90.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (bytes32[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateStateRoot(message StateRootUpdateMessage, signatureInfo OperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateStateRoot(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// ContractSFFLRegistryRollupOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupOwnershipTransferredIterator struct {
	Event *ContractSFFLRegistryRollupOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupOwnershipTransferred represents a OwnershipTransferred event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractSFFLRegistryRollupOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupOwnershipTransferredIterator{contract: _ContractSFFLRegistryRollup.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupOwnershipTransferred)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseOwnershipTransferred(log types.Log) (*ContractSFFLRegistryRollupOwnershipTransferred, error) {
	event := new(ContractSFFLRegistryRollupOwnershipTransferred)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLRegistryRollupStateRootUpdatedIterator is returned from FilterStateRootUpdated and is used to iterate over the raw logs and unpacked data for StateRootUpdated events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupStateRootUpdatedIterator struct {
	Event *ContractSFFLRegistryRollupStateRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupStateRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupStateRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupStateRootUpdated represents a StateRootUpdated event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupStateRootUpdated struct {
	RollupId    uint32
	BlockHeight uint64
	StateRoot   [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStateRootUpdated is a free log retrieval operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterStateRootUpdated(opts *bind.FilterOpts, rollupId []uint32, blockHeight []uint64) (*ContractSFFLRegistryRollupStateRootUpdatedIterator, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupStateRootUpdatedIterator{contract: _ContractSFFLRegistryRollup.contract, event: "StateRootUpdated", logs: logs, sub: sub}, nil
}

// WatchStateRootUpdated is a free log subscription operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchStateRootUpdated(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupStateRootUpdated, rollupId []uint32, blockHeight []uint64) (event.Subscription, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupStateRootUpdated)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateRootUpdated is a log parse operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseStateRootUpdated(log types.Log) (*ContractSFFLRegistryRollupStateRootUpdated, error) {
	event := new(ContractSFFLRegistryRollupStateRootUpdated)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
