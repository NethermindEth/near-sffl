// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractSFFLRegistryRollup

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// OperatorSetUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type OperatorSetUpdateMessage struct {
	Id        uint64
	Timestamp uint64
	Operators []RollupOperatorsOperator
}

// RollupOperatorsOperator is an auto generated low-level Go binding around an user-defined struct.
type RollupOperatorsOperator struct {
	Pubkey BN254G1Point
	Weight *big.Int
}

// RollupOperatorsSignatureInfo is an auto generated low-level Go binding around an user-defined struct.
type RollupOperatorsSignatureInfo struct {
	NonSignerPubkeys []BN254G1Point
	ApkG2            BN254G2Point
	Sigma            BN254G1Point
}

// SFFLRegistryBaseProofParams is an auto generated low-level Go binding around an user-defined struct.
type SFFLRegistryBaseProofParams struct {
	Target             common.Address
	StorageKey         [32]byte
	StateTrieWitness   []byte
	StorageTrieWitness []byte
}

// StateRootUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type StateRootUpdateMessage struct {
	RollupId            uint32
	BlockHeight         uint64
	Timestamp           uint64
	NearDaTransactionId [32]byte
	NearDaCommitment    [32]byte
	StateRoot           [32]byte
}

// ContractSFFLRegistryRollupMetaData contains all meta data concerning the ContractSFFLRegistryRollup contract.
var ContractSFFLRegistryRollupMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"PAUSED_UPDATE_OPERATOR_SET\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PAUSED_UPDATE_STATE_ROOT\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"THRESHOLD_DENOMINATOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"getApk\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorWeight\",\"inputs\":[{\"name\":\"pubkeyHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getQuorumThreshold\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStateRoot\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTotalWeight\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"operators\",\"type\":\"tuple[]\",\"internalType\":\"structRollupOperators.Operator[]\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weight\",\"type\":\"uint128\",\"internalType\":\"uint128\"}]},{\"name\":\"quorumThreshold\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"operatorUpdateId\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"initialOwner\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_pauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"nextOperatorUpdateId\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pauseAll\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauserRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPauserRegistry\",\"inputs\":[{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setQuorumThreshold\",\"inputs\":[{\"name\":\"newQuorumThreshold\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"unpause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAndGetStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"agreement\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateOperatorSet\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structOperatorSetUpdate.Message\",\"components\":[{\"name\":\"id\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"operators\",\"type\":\"tuple[]\",\"internalType\":\"structRollupOperators.Operator[]\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weight\",\"type\":\"uint128\",\"internalType\":\"uint128\"}]}]},{\"name\":\"signatureInfo\",\"type\":\"tuple\",\"internalType\":\"structRollupOperators.SignatureInfo\",\"components\":[{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateStateRoot\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"signatureInfo\",\"type\":\"tuple\",\"internalType\":\"structRollupOperators.SignatureInfo\",\"components\":[{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Paused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PauserRegistrySet\",\"inputs\":[{\"name\":\"pauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StateRootUpdated\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"indexed\":true,\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Unpaused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false}]",
	Bin: "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61417b80620000f46000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636f5b9918116100de578063d5d4bb5a11610097578063ef02445811610071578063ef02445814610392578063f2fde38b14610399578063f4db0571146103ac578063fabc1cbc146103b457600080fd5b8063d5d4bb5a14610341578063dd64766e14610354578063e0f5d9f01461036757600080fd5b80636f5b991814610299578063715018a6146102d757806382616b7b146102df578063886f1195146102f25780638da5cb5b1461031d578063b3a9e53b1461032e57600080fd5b80632db52ea5116101305780632db52ea51461020a5780632f65284e1461021d5780634afa71b91461023e578063595c6a67146102565780635ac86ab71461025e5780635c975abb1461029157600080fd5b80630510c1911461017857806306aba0e11461019757806310d67a2f146101bc578063136439dd146101d15780631fb4d411146101e457806321d49a54146101f7575b600080fd5b610180600181565b60405160ff90911681526020015b60405180910390f35b60cd546001600160801b03165b6040516001600160801b03909116815260200161018e565b6101cf6101ca36600461367c565b6103c7565b005b6101cf6101df366004613699565b610483565b6101cf6101f23660046136dc565b6105c2565b6101cf610205366004613835565b610698565b6101cf610218366004613928565b6107e2565b61023061022b366004613955565b6107f5565b60405190815260200161018e565b60cd54600160801b90046001600160801b03166101a4565b6101cf610919565b61028161026c3660046139f8565b606654600160ff9092169190911b9081161490565b604051901515815260200161018e565b606654610230565b60408051808201825260008082526020918201528151808301835260cb5480825260cc5491830191825283519081529051918101919091520161018e565b6101cf6109e0565b6101cf6102ed366004613a1b565b6109f4565b606554610305906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b6033546001600160a01b0316610305565b61023061033c366004613a90565b610b9e565b61023061034f366004613ac3565b610bcf565b6101a4610362366004613699565b610d2e565b60ce5461037a906001600160401b031681565b6040516001600160401b03909116815260200161018e565b60646101a4565b6101cf6103a736600461367c565b610d4b565b610180600081565b6101cf6103c2366004613699565b610dc1565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e9190613b07565b6001600160a01b0316336001600160a01b0316146104775760405162461bcd60e51b815260040161046e90613b24565b60405180910390fd5b61048081610f1d565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa1580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef9190613b6e565b61050b5760405162461bcd60e51b815260040161046e90613b90565b606654818116146105845760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161046e565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b606654600190600290811614156106175760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b604482015260640161046e565b61062c61062384611014565b60ca9084611044565b6106695760405162461bcd60e51b815260206004820152600e60248201526d145d5bdc9d5b481b9bdd081b595d60921b604482015260640161046e565b6106936106796020850185613bd8565b6106896040860160208701613bf3565b8560a001356113ec565b505050565b600054610100900460ff16158080156106b85750600054600160ff909116105b806106d25750303b1580156106d2575060005460ff166001145b6107355760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161046e565b6000805460ff191660011790558015610758576000805461ff0019166101001790555b610763826000611452565b61076c8361153c565b61077860ca878761158e565b60ce805467ffffffffffffffff19166001600160401b03861617905580156107da576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6107ea6115a2565b61048060ca826115fc565b600060608501351580159061080d5750608085013515155b6108595760405162461bcd60e51b815260206004820152601860248201527f456d707479204e45415220444120636f6d6d69746d656e740000000000000000604482015260640161046e565b600060978161086b6020890189613bd8565b63ffffffff1663ffffffff168152602001908152602001600020600087602001602081019061089a9190613bf3565b6001600160401b0316815260208101919091526040016000205490508061090557826108fa5760405162461bcd60e51b815260206004820152600f60248201526e115b5c1d1e481859dc99595b595b9d608a1b604482015260640161046e565b6109058685856116b5565b61090f8686610bcf565b9695505050505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610961573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190613b6e565b6109a15760405162461bcd60e51b815260040161046e90613b90565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b6109e86115a2565b6109f2600061153c565b565b60665460009060019081161415610a495760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b604482015260640161046e565b60ce546001600160401b0316610a626020850185613bf3565b6001600160401b031614610aab5760405162461bcd60e51b815260206004820152601060248201526f15dc9bdb99c81b595cdcd859d948125160821b604482015260640161046e565b610ab7610623846116c6565b610af45760405162461bcd60e51b815260206004820152600e60248201526d145d5bdc9d5b481b9bdd081b595d60921b604482015260640161046e565b610b016020840184613bf3565b610b0c906001613c24565b60ce805467ffffffffffffffff19166001600160401b0392909216919091179055610693610b3d6040850185613c4f565b808060200260200160405190810160405280939291908181526020016000905b82821015610b8957610b7a60608302860136819003810190613c9e565b81526020019060010190610b5d565b505050505060ca6116d990919063ffffffff16565b63ffffffff821660009081526097602090815260408083206001600160401b03851684529091529020545b92915050565b600080609781610be26020870187613bd8565b63ffffffff1663ffffffff1681526020019081526020016000206000856020016020810190610c119190613bf3565b6001600160401b03166001600160401b031681526020019081526020016000205490508360a001358114610c875760405162461bcd60e51b815260206004820152601760248201527f4d69736d61746368696e6720737461746520726f6f7473000000000000000000604482015260640161046e565b610d26610c97602085018561367c565b602085013583610caa6040880188613cba565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cec925050506060890189613cba565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118f692505050565b949350505050565b600081815260ca60205260408120546001600160801b0316610bc9565b610d536115a2565b6001600160a01b038116610db85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161046e565b6104808161153c565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e389190613b07565b6001600160a01b0316336001600160a01b031614610e685760405162461bcd60e51b815260040161046e90613b24565b606654198119606654191614610ee65760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161046e565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016105b7565b6001600160a01b038116610fab5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a40161046e565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6000816040516020016110279190613d00565b604051602081830303815290604052805190602001209050919050565b6040805180820190915260008082526020820181905260038501549091906001600160801b0316826110768580613d6a565b90506001600160401b0381111561108f5761108f61372a565b6040519080825280602002602001820160405280156110b8578160200160208202803683370190505b50905060005b6110c88680613d6a565b90508110156112ad5761111b6110de8780613d6a565b838181106110ee576110ee613db3565b9050604002018036038101906111049190613dc9565b805160009081526020918201519091526040902090565b82828151811061112d5761112d613db3565b602090810291909101015280156111c4578161114a600183613de5565b8151811061115a5761115a613db3565b602002602001015160001c82828151811061117757611177613db3565b602002602001015160001c116111c45760405162461bcd60e51b8152602060048201526012602482015271141d589ad95e5cc81b9bdd081cdbdc9d195960721b604482015260640161046e565b60008860000160008484815181106111de576111de613db3565b6020908102919091018101518252810191909152604001600020546001600160801b03169050806112515760405162461bcd60e51b815260206004820152601860248201527f4f70657261746f7220686173207a65726f207765696768740000000000000000604482015260640161046e565b61128b61125e8880613d6a565b8481811061126e5761126e613db3565b9050604002018036038101906112849190613dc9565b8690611a31565b94506112978185613de5565b93505080806112a590613dfc565b9150506110be565b506112db6112ba84611ad4565b6040805180820190915260018a0154815260028a0154602082015290611a31565b925060008061130e88866112f7368b90038b0160208c01613e86565b611309368c90038c0160a08d01613dc9565b611b6f565b915091508161135f5760405162461bcd60e51b815260206004820152601e60248201527f50616972696e6720707265636f6d70696c652063616c6c206661696c65640000604482015260640161046e565b806113a35760405162461bcd60e51b815260206004820152601460248201527314da59db985d1d5c99481a5cc81a5b9d985b1a5960621b604482015260640161046e565b60038901546064906113c7906001600160801b03600160801b820481169116613ec5565b6113d19190613f0a565b6001600160801b0316841015955050505050505b9392505050565b63ffffffff831660008181526097602090815260408083206001600160401b03871680855290835292819020859055518481529192917fca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8910160405180910390a3505050565b6065546001600160a01b031615801561147357506001600160a01b03821615155b6114f55760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161046e565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a261153882610f1d565b5050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61159883836116d9565b61069383826115fc565b6033546001600160a01b031633146109f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046e565b60646001600160801b03821611156116685760405162461bcd60e51b815260206004820152602960248201527f51756f72756d207468726573686f6c642067726561746572207468616e2064656044820152683737b6b4b730ba37b960b91b606482015260840161046e565b6003820180546001600160801b03808416600160801b810291909216179091556040517f2b71b2179969a005ac6fd9c196134b364ff40069a17dd72faa96c4a00e73e9f490600090a25050565b816116c084826105c2565b50505050565b6000816040516020016110279190613f30565b604080516080810182526000918101828152606082018390528152602081019190915260408051808201909152600184015481526002840154602082015260038401546001600160801b031660005b84518110156118bb5784818151811061174357611743613db3565b60200260200101519350600061176e8560000151805160009081526020918201519091526040902090565b60008181526020898152604090912054908701519192506001600160801b0390811691168114156117da5760405162461bcd60e51b81526020600482015260166024820152754f70657261746f7220697320757020746f206461746560501b604482015260640161046e565b60208601516117e98286614008565b6117f39190614030565b6020878101516000858152918b9052604090912080546001600160801b0319166001600160801b03928316179055909450811661183e578551611837908690611a31565b9450611863565b60208601516001600160801b0316611863576118606112848760000151611ad4565b94505b6020808701516040516001600160801b03909116815283917f7714c619c02393ccf44c3de606bec5c80ae7a6077504b74887fb39f335e98adc910160405180910390a2505080806118b390613dfc565b915050611728565b506003850180546001600160801b0319166001600160801b039290921691909117905580516001850155602001516002909301929092555050565b6040516bffffffffffffffffffffffff19606087901b16602082015260009081908190611936906034016040516020818303038152906040528688611cf2565b91509150816119805760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d08191bd95cc81b9bdd08195e1a5cdd60521b604482015260640161046e565b600061198b82611d1b565b90506000806119c08a6040516020016119a691815260200190565b604051602081830303815290604052888560400151611cf2565b9150915081611a115760405162461bcd60e51b815260206004820152601c60248201527f53746f726167652076616c756520646f6573206e6f7420657869737400000000604482015260640161046e565b611a22611a1d82611ddf565b611e12565b9b9a5050505050505050505050565b6040805180820190915260008082526020820152611a4d613582565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa9050808015611a8c57611a8e565bfe5b5080611acc5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b604482015260640161046e565b505092915050565b60408051808201909152600080825260208201528151158015611af957506020820151155b15611b17575050604080518082019091526000808252602082015290565b6040518060400160405280836000015181526020016000805160206141268339815191528460200151611b4a9190614052565b611b6290600080516020614126833981519152613de5565b905292915050565b919050565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000187876000015188602001518860000151600060028110611bb757611bb7613db3565b60200201518951600160200201518a60200151600060028110611bdc57611bdc613db3565b60200201518b60200151600160028110611bf857611bf8613db3565b602090810291909101518c518d830151604051611c559a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c611c789190614052565b9050611ce4611c8a6112848884611e41565b611c92611ec9565b611cda611ccb85611cc5604080518082018252600080825260209182015281518083019092526001825260029082015290565b90611e41565b611cd48c611f89565b90611a31565b886201d4c0612019565b909890975095505050505050565b600060606000611d018661223d565b9050611d0e81868661226f565b9250925050935093915050565b604080516080810182526000808252602082018190529181018290526060810182905290611d488361234a565b90506040518060800160405280611d7883600081518110611d6b57611d6b613db3565b602002602001015161237d565b8152602001611d9383600181518110611d6b57611d6b613db3565b8152602001611dbb83600281518110611dae57611dae613db3565b6020026020010151612384565b8152602001611dd683600381518110611dae57611dae613db3565b90529392505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610bc990612486565b6000806000602084511115611e28576020611e2b565b83515b60209485015194036008029390931c9392505050565b6040805180820190915260008082526020820152611e5d6135a0565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050808015611a8c575080611acc5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b604482015260640161046e565b611ed16135be565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b604080518082019091526000808252602082015260008080611fb960008051602061412683398151915286614052565b90505b611fc581612516565b9093509150600080516020614126833981519152828309831415611fff576040805180820190915290815260208101919091529392505050565b600080516020614126833981519152600182089050611fbc565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061204b6135e3565b60005b6002811015612210576000612064826006614066565b905084826002811061207857612078613db3565b6020020151518361208a836000614085565b600c811061209a5761209a613db3565b60200201528482600281106120b1576120b1613db3565b602002015160200151838260016120c89190614085565b600c81106120d8576120d8613db3565b60200201528382600281106120ef576120ef613db3565b6020020151515183612102836002614085565b600c811061211257612112613db3565b602002015283826002811061212957612129613db3565b6020020151516001602002015183612142836003614085565b600c811061215257612152613db3565b602002015283826002811061216957612169613db3565b60200201516020015160006002811061218457612184613db3565b602002015183612195836004614085565b600c81106121a5576121a5613db3565b60200201528382600281106121bc576121bc613db3565b6020020151602001516001600281106121d7576121d7613db3565b6020020151836121e8836005614085565b600c81106121f8576121f8613db3565b6020020152508061220881613dfc565b91505061204e565b50612219613602565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b6060818051906020012060405160200161225991815260200190565b6040516020818303038152906040529050919050565b60006060600061227e85612598565b90506000806000612290848a89612692565b815192955090935091501580806122a45750815b6122f05760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e000000000000604482015260640161046e565b60008161230c5760405180602001604052806000815250612338565b6123388661231b600188613de5565b8151811061232b5761232b613db3565b6020026020010151612ab6565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610bc990612ae0565b6000610bc9825b60006021826000015111156123db5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161046e565b60008060006123e985612ccc565b9194509250905060008160018111156124045761240461409d565b146124515760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161046e565b60008386602001516124639190614085565b8051909150602084101561090f5760208490036101000a90049695505050505050565b6060600080600061249685612ccc565b9194509250905060008160018111156124b1576124b161409d565b146124fe5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e0000000000000000604482015260640161046e565b61250d85602001518484613016565b95945050505050565b6000808060008051602061412683398151915260036000805160206141268339815191528660008051602061412683398151915288890909089050600061258c827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526000805160206141268339815191526130f4565b91959194509092505050565b606060006125a58361234a565b9050600081516001600160401b038111156125c2576125c261372a565b60405190808252806020026020018201604052801561260757816020015b60408051808201909152606080825260208201528152602001906001900390816125e05790505b50905060005b825181101561268a57600061263a84838151811061262d5761262d613db3565b6020026020010151612486565b905060405180604001604052808281526020016126568361234a565b81525083838151811061266b5761266b613db3565b602002602001018190525050808061268290613dfc565b91505061260d565b509392505050565b600060608180806126a28761319c565b905060008690506000806126c9604051806040016040528060608152602001606081525090565b60005b8c51811015612a8e578c81815181106126e7576126e7613db3565b6020026020010151915082846126fd9190614085565b935061270a600188614085565b9650836127625781518051602090910120851461275d5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b604482015260640161046e565b61281f565b8151516020116127c45781518051602090910120851461275d5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c20686173680000000000604482015260640161046e565b846127d283600001516132d6565b1461281f5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f64652068617368000000000000604482015260640161046e565b61282b60106001614085565b82602001515114156128a457855184141561284557612a8e565b600086858151811061285957612859613db3565b602001015160f81c60f81b60f81c9050600083602001518260ff168151811061288457612884613db3565b60200260200101519050612897816132fe565b9650600194505050612a7c565b60028260200151511415612a345760006128bd83613334565b90506000816000815181106128d4576128d4613db3565b016020015160f81c905060006128eb6002836140b3565b6128f69060026140d5565b90506000612907848360ff16613358565b905060006129158b8a613358565b90506000612923838361338e565b905060ff85166002148061293a575060ff85166003145b156129745780835114801561294f5750808251145b156129615761295e818b614085565b99505b50600160ff1b9950612a8e945050505050565b60ff85161580612987575060ff85166001145b156129dd57825181146129a75750600160ff1b9950612a8e945050505050565b6129ce88602001516001815181106129c1576129c1613db3565b60200260200101516132fe565b9a509750612a7c945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b606482015260840161046e565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e000000604482015260640161046e565b80612a8681613dfc565b9150506126cc565b50600160ff1b841486612aa18786613358565b909e909d50909b509950505050505050505050565b60208101518051606091610bc991612ad090600190613de5565b8151811061262d5761262d613db3565b6060600080612aee84612ccc565b91935090915060019050816001811115612b0a57612b0a61409d565b14612b575760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e000000000000000000604482015260640161046e565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081612b705790505090506000835b8651811015612cc15760208210612c095760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b606482015260840161046e565b600080612c466040518060400160405280858c60000151612c2a9190613de5565b8152602001858c60200151612c3f9190614085565b9052612ccc565b509150915060405180604001604052808383612c629190614085565b8152602001848b60200151612c779190614085565b815250858581518110612c8c57612c8c613db3565b6020908102919091010152612ca2600185614085565b9350612cae8183614085565b612cb89084614085565b92505050612b9d565b508152949350505050565b600080600080846000015111612d245760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e0000000000000000604482015260640161046e565b6020840151805160001a607f8111612d4957600060016000945094509450505061300f565b60b78111612dc5576000612d5e608083613de5565b905080876000015111612db35760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e00000000000000604482015260640161046e565b6001955093506000925061300f915050565b60bf8111612eb4576000612dda60b783613de5565b905080876000015111612e2f5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e00604482015260640161046e565b600183015160208290036101000a9004612e498183614085565b885111612e985760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e0000000000000000604482015260640161046e565b612ea3826001614085565b965094506000935061300f92505050565b60f78111612f2f576000612ec960c083613de5565b905080876000015111612f1e5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e000000000000000000604482015260640161046e565b60019550935084925061300f915050565b6000612f3c60f783613de5565b905080876000015111612f915760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e000000604482015260640161046e565b600183015160208290036101000a9004612fab8183614085565b885111612ff35760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b604482015260640161046e565b612ffe826001614085565b965094506001935061300f92505050565b9193909250565b60606000826001600160401b038111156130325761303261372a565b6040519080825280601f01601f19166020018201604052801561305c576020820181803683370190505b5090508051600014156130705790506113e5565b600061307c8587614085565b90506020820160005b6130906020876140f8565b8110156130c757825182526130a6602084614085565b92506130b3602083614085565b9150806130bf81613dfc565b915050613085565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6000806130ff613602565b613107613620565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828015611a8c5750826131915760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c757265000000000000604482015260640161046e565b505195945050505050565b60606000825160026131ae9190614066565b6001600160401b038111156131c5576131c561372a565b6040519080825280601f01601f1916602001820160405280156131ef576020820181803683370190505b50905060005b83518110156132cf57600484828151811061321257613212613db3565b01602001516001600160f81b031916901c8261322f836002614066565b8151811061323f5761323f613db3565b60200101906001600160f81b031916908160001a905350601084828151811061326a5761326a613db3565b016020015161327c919060f81c6140b3565b60f81b8261328b836002614066565b613296906001614085565b815181106132a6576132a6613db3565b60200101906001600160f81b031916908160001a905350806132c781613dfc565b9150506131f5565b5092915050565b60006020825110156132ea57506020015190565b81806020019051810190610bc9919061410c565b6000606060208360000151101561331f576133188361340a565b905061332b565b61332883612486565b90505b6113e5816132d6565b6060610bc9613353836020015160008151811061262d5761262d613db3565b61319c565b6060825182106133775750604080516020810190915260008152610bc9565b6113e583838486516133899190613de5565b613415565b6000805b8084511180156133a25750808351115b80156133f357508281815181106133bb576133bb613db3565b602001015160f81c60f81b6001600160f81b0319168482815181106133e2576133e2613db3565b01602001516001600160f81b031916145b156113e5578061340281613dfc565b915050613392565b6060610bc98261356c565b60608161342381601f614085565b10156134625760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161046e565b8261346d8382614085565b10156134ac5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161046e565b6134b68284614085565b845110156134fa5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161046e565b6060821580156135195760405191506000825260208201604052613563565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561355257805183526020928301920161353a565b5050858452601f01601f1916604052505b50949350505050565b6060610bc9826020015160008460000151613016565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180604001604052806135d161363e565b81526020016135de61363e565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461048057600080fd5b8035611b6a8161365c565b60006020828403121561368e57600080fd5b81356113e58161365c565b6000602082840312156136ab57600080fd5b5035919050565b600060c082840312156136c457600080fd5b50919050565b600060e082840312156136c457600080fd5b60008060e083850312156136ef57600080fd5b6136f984846136b2565b915060c08301356001600160401b0381111561371457600080fd5b613720858286016136ca565b9150509250929050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156137625761376261372a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156137905761379061372a565b604052919050565b6000604082840312156137aa57600080fd5b6137b2613740565b9050813581526020820135602082015292915050565b80356001600160801b0381168114611b6a57600080fd5b6000606082840312156137f157600080fd5b6137f9613740565b90506138058383613798565b8152613813604083016137c8565b602082015292915050565b80356001600160401b0381168114611b6a57600080fd5b600080600080600060a0868803121561384d57600080fd5b85356001600160401b038082111561386457600080fd5b818801915088601f83011261387857600080fd5b813560208282111561388c5761388c61372a565b61389a818360051b01613768565b8281528181019350606092830285018201928c8411156138b957600080fd5b948201945b838610156138df576138d08d876137df565b855294850194938201936138be565b819a506138ed838d016137c8565b99506138fb60408d0161381e565b9850613908818d01613671565b975050505050505061391c60808701613671565b90509295509295909350565b60006020828403121561393a57600080fd5b6113e5826137c8565b6000608082840312156136c457600080fd5b600080600080610100858703121561396c57600080fd5b61397686866136b2565b935060c08501356001600160401b038082111561399257600080fd5b61399e88838901613943565b945060e08701359150808211156139b457600080fd5b818701915087601f8301126139c857600080fd5b8135818111156139d757600080fd5b8860208285010111156139e957600080fd5b95989497505060200194505050565b600060208284031215613a0a57600080fd5b813560ff811681146113e557600080fd5b60008060408385031215613a2e57600080fd5b82356001600160401b0380821115613a4557600080fd5b9084019060608287031215613a5957600080fd5b90925060208401359080821115613a6f57600080fd5b50613720858286016136ca565b803563ffffffff81168114611b6a57600080fd5b60008060408385031215613aa357600080fd5b613aac83613a7c565b9150613aba6020840161381e565b90509250929050565b60008060e08385031215613ad657600080fd5b613ae084846136b2565b915060c08301356001600160401b03811115613afb57600080fd5b61372085828601613943565b600060208284031215613b1957600080fd5b81516113e58161365c565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b600060208284031215613b8057600080fd5b815180151581146113e557600080fd5b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b600060208284031215613bea57600080fd5b6113e582613a7c565b600060208284031215613c0557600080fd5b6113e58261381e565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03808316818516808303821115613c4657613c46613c0e565b01949350505050565b6000808335601e19843603018112613c6657600080fd5b8301803591506001600160401b03821115613c8057600080fd5b6020019150606081023603821315613c9757600080fd5b9250929050565b600060608284031215613cb057600080fd5b6113e583836137df565b6000808335601e19843603018112613cd157600080fd5b8301803591506001600160401b03821115613ceb57600080fd5b602001915036819003821315613c9757600080fd5b60c0810163ffffffff613d1284613a7c565b168252613d216020840161381e565b6001600160401b03808216602085015280613d3e6040870161381e565b1660408501525050606083013560608301526080830135608083015260a083013560a083015292915050565b6000808335601e19843603018112613d8157600080fd5b8301803591506001600160401b03821115613d9b57600080fd5b6020019150600681901b3603821315613c9757600080fd5b634e487b7160e01b600052603260045260246000fd5b600060408284031215613ddb57600080fd5b6113e58383613798565b600082821015613df757613df7613c0e565b500390565b6000600019821415613e1057613e10613c0e565b5060010190565b600082601f830112613e2857600080fd5b604051604081018181106001600160401b0382111715613e4a57613e4a61372a565b8060405250806040840185811115613e6157600080fd5b845b81811015613e7b578035835260209283019201613e63565b509195945050505050565b600060808284031215613e9857600080fd5b613ea0613740565b613eaa8484613e17565b8152613eb98460408501613e17565b60208201529392505050565b60006001600160801b0380831681851681830481118215151615613eeb57613eeb613c0e565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b0380841680613f2457613f24613ef4565b92169190910492915050565b60006020808352608083016001600160401b0380613f4d8761381e565b1683860152613f5d83870161381e565b604082821681880152808801359150601e19883603018212613f7e57600080fd5b90870190813583811115613f9157600080fd5b606093508381023603891315613fa657600080fd5b87840184905293849052908401926000919060a088015b81841015613ffb578535815286860135878201526001600160801b03613fe48488016137c8565b168184015294840194600193909301928401613fbd565b9998505050505050505050565b60006001600160801b038381169083168181101561402857614028613c0e565b039392505050565b60006001600160801b03808316818516808303821115613c4657613c46613c0e565b60008261406157614061613ef4565b500690565b600081600019048311821515161561408057614080613c0e565b500290565b6000821982111561409857614098613c0e565b500190565b634e487b7160e01b600052602160045260246000fd5b600060ff8316806140c6576140c6613ef4565b8060ff84160691505092915050565b600060ff821660ff8416808210156140ef576140ef613c0e565b90039392505050565b60008261410757614107613ef4565b500490565b60006020828403121561411e57600080fd5b505191905056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a26469706673582212209442f6cd5130df0a328238668fba973759bafd369210fdbb0b8d0791be0997f364736f6c634300080c0033",
}

// ContractSFFLRegistryRollupABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractSFFLRegistryRollupMetaData.ABI instead.
var ContractSFFLRegistryRollupABI = ContractSFFLRegistryRollupMetaData.ABI

// ContractSFFLRegistryRollupBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractSFFLRegistryRollupMetaData.Bin instead.
var ContractSFFLRegistryRollupBin = ContractSFFLRegistryRollupMetaData.Bin

// DeployContractSFFLRegistryRollup deploys a new Ethereum contract, binding an instance of ContractSFFLRegistryRollup to it.
func DeployContractSFFLRegistryRollup(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *ContractSFFLRegistryRollup, error) {
	parsed, err := ContractSFFLRegistryRollupMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractSFFLRegistryRollupBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractSFFLRegistryRollup{ContractSFFLRegistryRollupCaller: ContractSFFLRegistryRollupCaller{contract: contract}, ContractSFFLRegistryRollupTransactor: ContractSFFLRegistryRollupTransactor{contract: contract}, ContractSFFLRegistryRollupFilterer: ContractSFFLRegistryRollupFilterer{contract: contract}}, nil
}

// ContractSFFLRegistryRollup is an auto generated Go binding around an Ethereum contract.
type ContractSFFLRegistryRollup struct {
	ContractSFFLRegistryRollupCaller     // Read-only binding to the contract
	ContractSFFLRegistryRollupTransactor // Write-only binding to the contract
	ContractSFFLRegistryRollupFilterer   // Log filterer for contract events
}

// ContractSFFLRegistryRollupCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractSFFLRegistryRollupFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSFFLRegistryRollupSession struct {
	Contract     *ContractSFFLRegistryRollup // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractSFFLRegistryRollupCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractSFFLRegistryRollupCallerSession struct {
	Contract *ContractSFFLRegistryRollupCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractSFFLRegistryRollupTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractSFFLRegistryRollupTransactorSession struct {
	Contract     *ContractSFFLRegistryRollupTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractSFFLRegistryRollupRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupRaw struct {
	Contract *ContractSFFLRegistryRollup // Generic contract binding to access the raw methods on
}

// ContractSFFLRegistryRollupCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupCallerRaw struct {
	Contract *ContractSFFLRegistryRollupCaller // Generic read-only contract binding to access the raw methods on
}

// ContractSFFLRegistryRollupTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupTransactorRaw struct {
	Contract *ContractSFFLRegistryRollupTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractSFFLRegistryRollup creates a new instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollup(address common.Address, backend bind.ContractBackend) (*ContractSFFLRegistryRollup, error) {
	contract, err := bindContractSFFLRegistryRollup(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollup{ContractSFFLRegistryRollupCaller: ContractSFFLRegistryRollupCaller{contract: contract}, ContractSFFLRegistryRollupTransactor: ContractSFFLRegistryRollupTransactor{contract: contract}, ContractSFFLRegistryRollupFilterer: ContractSFFLRegistryRollupFilterer{contract: contract}}, nil
}

// NewContractSFFLRegistryRollupCaller creates a new read-only instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupCaller(address common.Address, caller bind.ContractCaller) (*ContractSFFLRegistryRollupCaller, error) {
	contract, err := bindContractSFFLRegistryRollup(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupCaller{contract: contract}, nil
}

// NewContractSFFLRegistryRollupTransactor creates a new write-only instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractSFFLRegistryRollupTransactor, error) {
	contract, err := bindContractSFFLRegistryRollup(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupTransactor{contract: contract}, nil
}

// NewContractSFFLRegistryRollupFilterer creates a new log filterer instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractSFFLRegistryRollupFilterer, error) {
	contract, err := bindContractSFFLRegistryRollup(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupFilterer{contract: contract}, nil
}

// bindContractSFFLRegistryRollup binds a generic wrapper to an already deployed contract.
func bindContractSFFLRegistryRollup(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractSFFLRegistryRollupMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLRegistryRollup.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.contract.Transact(opts, method, params...)
}

// PAUSEDUPDATEOPERATORSET is a free data retrieval call binding the contract method 0xf4db0571.
//
// Solidity: function PAUSED_UPDATE_OPERATOR_SET() view returns(uint8)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) PAUSEDUPDATEOPERATORSET(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "PAUSED_UPDATE_OPERATOR_SET")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// PAUSEDUPDATEOPERATORSET is a free data retrieval call binding the contract method 0xf4db0571.
//
// Solidity: function PAUSED_UPDATE_OPERATOR_SET() view returns(uint8)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) PAUSEDUPDATEOPERATORSET() (uint8, error) {
	return _ContractSFFLRegistryRollup.Contract.PAUSEDUPDATEOPERATORSET(&_ContractSFFLRegistryRollup.CallOpts)
}

// PAUSEDUPDATEOPERATORSET is a free data retrieval call binding the contract method 0xf4db0571.
//
// Solidity: function PAUSED_UPDATE_OPERATOR_SET() view returns(uint8)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) PAUSEDUPDATEOPERATORSET() (uint8, error) {
	return _ContractSFFLRegistryRollup.Contract.PAUSEDUPDATEOPERATORSET(&_ContractSFFLRegistryRollup.CallOpts)
}

// PAUSEDUPDATESTATEROOT is a free data retrieval call binding the contract method 0x0510c191.
//
// Solidity: function PAUSED_UPDATE_STATE_ROOT() view returns(uint8)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) PAUSEDUPDATESTATEROOT(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "PAUSED_UPDATE_STATE_ROOT")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// PAUSEDUPDATESTATEROOT is a free data retrieval call binding the contract method 0x0510c191.
//
// Solidity: function PAUSED_UPDATE_STATE_ROOT() view returns(uint8)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) PAUSEDUPDATESTATEROOT() (uint8, error) {
	return _ContractSFFLRegistryRollup.Contract.PAUSEDUPDATESTATEROOT(&_ContractSFFLRegistryRollup.CallOpts)
}

// PAUSEDUPDATESTATEROOT is a free data retrieval call binding the contract method 0x0510c191.
//
// Solidity: function PAUSED_UPDATE_STATE_ROOT() view returns(uint8)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) PAUSEDUPDATESTATEROOT() (uint8, error) {
	return _ContractSFFLRegistryRollup.Contract.PAUSEDUPDATESTATEROOT(&_ContractSFFLRegistryRollup.CallOpts)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) THRESHOLDDENOMINATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "THRESHOLD_DENOMINATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.THRESHOLDDENOMINATOR(&_ContractSFFLRegistryRollup.CallOpts)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.THRESHOLDDENOMINATOR(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetApk(opts *bind.CallOpts) (BN254G1Point, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getApk")

	if err != nil {
		return *new(BN254G1Point), err
	}

	out0 := *abi.ConvertType(out[0], new(BN254G1Point)).(*BN254G1Point)

	return out0, err

}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetApk() (BN254G1Point, error) {
	return _ContractSFFLRegistryRollup.Contract.GetApk(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetApk() (BN254G1Point, error) {
	return _ContractSFFLRegistryRollup.Contract.GetApk(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetOperatorWeight(opts *bind.CallOpts, pubkeyHash [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getOperatorWeight", pubkeyHash)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetOperatorWeight(pubkeyHash [32]byte) (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetOperatorWeight(&_ContractSFFLRegistryRollup.CallOpts, pubkeyHash)
}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetOperatorWeight(pubkeyHash [32]byte) (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetOperatorWeight(&_ContractSFFLRegistryRollup.CallOpts, pubkeyHash)
}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetQuorumThreshold(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getQuorumThreshold")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetQuorumThreshold() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetQuorumThreshold(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetQuorumThreshold() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetQuorumThreshold(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetStateRoot(opts *bind.CallOpts, rollupId uint32, blockHeight uint64) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getStateRoot", rollupId, blockHeight)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStateRoot(&_ContractSFFLRegistryRollup.CallOpts, rollupId, blockHeight)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStateRoot(&_ContractSFFLRegistryRollup.CallOpts, rollupId, blockHeight)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetStorageValue(opts *bind.CallOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getStorageValue", message, proofParams)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStorageValue(&_ContractSFFLRegistryRollup.CallOpts, message, proofParams)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStorageValue(&_ContractSFFLRegistryRollup.CallOpts, message, proofParams)
}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetTotalWeight(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getTotalWeight")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetTotalWeight() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetTotalWeight(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetTotalWeight() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetTotalWeight(&_ContractSFFLRegistryRollup.CallOpts)
}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) NextOperatorUpdateId(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "nextOperatorUpdateId")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) NextOperatorUpdateId() (uint64, error) {
	return _ContractSFFLRegistryRollup.Contract.NextOperatorUpdateId(&_ContractSFFLRegistryRollup.CallOpts)
}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) NextOperatorUpdateId() (uint64, error) {
	return _ContractSFFLRegistryRollup.Contract.NextOperatorUpdateId(&_ContractSFFLRegistryRollup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Owner() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.Owner(&_ContractSFFLRegistryRollup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) Owner() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.Owner(&_ContractSFFLRegistryRollup.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Paused(index uint8) (bool, error) {
	return _ContractSFFLRegistryRollup.Contract.Paused(&_ContractSFFLRegistryRollup.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) Paused(index uint8) (bool, error) {
	return _ContractSFFLRegistryRollup.Contract.Paused(&_ContractSFFLRegistryRollup.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Paused0() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.Paused0(&_ContractSFFLRegistryRollup.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) Paused0() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.Paused0(&_ContractSFFLRegistryRollup.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) PauserRegistry() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.PauserRegistry(&_ContractSFFLRegistryRollup.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.PauserRegistry(&_ContractSFFLRegistryRollup.CallOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x21d49a54.
//
// Solidity: function initialize(((uint256,uint256),uint128)[] operators, uint128 quorumThreshold, uint64 operatorUpdateId, address initialOwner, address _pauserRegistry) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) Initialize(opts *bind.TransactOpts, operators []RollupOperatorsOperator, quorumThreshold *big.Int, operatorUpdateId uint64, initialOwner common.Address, _pauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "initialize", operators, quorumThreshold, operatorUpdateId, initialOwner, _pauserRegistry)
}

// Initialize is a paid mutator transaction binding the contract method 0x21d49a54.
//
// Solidity: function initialize(((uint256,uint256),uint128)[] operators, uint128 quorumThreshold, uint64 operatorUpdateId, address initialOwner, address _pauserRegistry) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Initialize(operators []RollupOperatorsOperator, quorumThreshold *big.Int, operatorUpdateId uint64, initialOwner common.Address, _pauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.Initialize(&_ContractSFFLRegistryRollup.TransactOpts, operators, quorumThreshold, operatorUpdateId, initialOwner, _pauserRegistry)
}

// Initialize is a paid mutator transaction binding the contract method 0x21d49a54.
//
// Solidity: function initialize(((uint256,uint256),uint128)[] operators, uint128 quorumThreshold, uint64 operatorUpdateId, address initialOwner, address _pauserRegistry) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) Initialize(operators []RollupOperatorsOperator, quorumThreshold *big.Int, operatorUpdateId uint64, initialOwner common.Address, _pauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.Initialize(&_ContractSFFLRegistryRollup.TransactOpts, operators, quorumThreshold, operatorUpdateId, initialOwner, _pauserRegistry)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.Pause(&_ContractSFFLRegistryRollup.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.Pause(&_ContractSFFLRegistryRollup.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) PauseAll() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.PauseAll(&_ContractSFFLRegistryRollup.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.PauseAll(&_ContractSFFLRegistryRollup.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.RenounceOwnership(&_ContractSFFLRegistryRollup.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.RenounceOwnership(&_ContractSFFLRegistryRollup.TransactOpts)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetPauserRegistry(&_ContractSFFLRegistryRollup.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetPauserRegistry(&_ContractSFFLRegistryRollup.TransactOpts, newPauserRegistry)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) SetQuorumThreshold(opts *bind.TransactOpts, newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "setQuorumThreshold", newQuorumThreshold)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) SetQuorumThreshold(newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetQuorumThreshold(&_ContractSFFLRegistryRollup.TransactOpts, newQuorumThreshold)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) SetQuorumThreshold(newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetQuorumThreshold(&_ContractSFFLRegistryRollup.TransactOpts, newQuorumThreshold)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.TransferOwnership(&_ContractSFFLRegistryRollup.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.TransferOwnership(&_ContractSFFLRegistryRollup.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.Unpause(&_ContractSFFLRegistryRollup.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.Unpause(&_ContractSFFLRegistryRollup.TransactOpts, newPausedStatus)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateAndGetStorageValue(opts *bind.TransactOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateAndGetStorageValue", message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateAndGetStorageValue(&_ContractSFFLRegistryRollup.TransactOpts, message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateAndGetStorageValue(&_ContractSFFLRegistryRollup.TransactOpts, message, proofParams, agreement)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x82616b7b.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateOperatorSet(opts *bind.TransactOpts, message OperatorSetUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateOperatorSet", message, signatureInfo)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x82616b7b.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateOperatorSet(message OperatorSetUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateOperatorSet(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x82616b7b.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateOperatorSet(message OperatorSetUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateOperatorSet(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x1fb4d411.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateStateRoot(opts *bind.TransactOpts, message StateRootUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateStateRoot", message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x1fb4d411.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateStateRoot(message StateRootUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateStateRoot(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x1fb4d411.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateStateRoot(message StateRootUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateStateRoot(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// ContractSFFLRegistryRollupInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupInitializedIterator struct {
	Event *ContractSFFLRegistryRollupInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupInitialized represents a Initialized event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractSFFLRegistryRollupInitializedIterator, error) {

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupInitializedIterator{contract: _ContractSFFLRegistryRollup.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupInitialized)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseInitialized(log types.Log) (*ContractSFFLRegistryRollupInitialized, error) {
	event := new(ContractSFFLRegistryRollupInitialized)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLRegistryRollupOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupOwnershipTransferredIterator struct {
	Event *ContractSFFLRegistryRollupOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupOwnershipTransferred represents a OwnershipTransferred event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractSFFLRegistryRollupOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupOwnershipTransferredIterator{contract: _ContractSFFLRegistryRollup.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupOwnershipTransferred)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseOwnershipTransferred(log types.Log) (*ContractSFFLRegistryRollupOwnershipTransferred, error) {
	event := new(ContractSFFLRegistryRollupOwnershipTransferred)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLRegistryRollupPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupPausedIterator struct {
	Event *ContractSFFLRegistryRollupPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupPaused represents a Paused event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractSFFLRegistryRollupPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupPausedIterator{contract: _ContractSFFLRegistryRollup.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupPaused)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParsePaused(log types.Log) (*ContractSFFLRegistryRollupPaused, error) {
	event := new(ContractSFFLRegistryRollupPaused)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLRegistryRollupPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupPauserRegistrySetIterator struct {
	Event *ContractSFFLRegistryRollupPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupPauserRegistrySet represents a PauserRegistrySet event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractSFFLRegistryRollupPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupPauserRegistrySetIterator{contract: _ContractSFFLRegistryRollup.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupPauserRegistrySet)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParsePauserRegistrySet(log types.Log) (*ContractSFFLRegistryRollupPauserRegistrySet, error) {
	event := new(ContractSFFLRegistryRollupPauserRegistrySet)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLRegistryRollupStateRootUpdatedIterator is returned from FilterStateRootUpdated and is used to iterate over the raw logs and unpacked data for StateRootUpdated events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupStateRootUpdatedIterator struct {
	Event *ContractSFFLRegistryRollupStateRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupStateRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupStateRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupStateRootUpdated represents a StateRootUpdated event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupStateRootUpdated struct {
	RollupId    uint32
	BlockHeight uint64
	StateRoot   [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStateRootUpdated is a free log retrieval operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterStateRootUpdated(opts *bind.FilterOpts, rollupId []uint32, blockHeight []uint64) (*ContractSFFLRegistryRollupStateRootUpdatedIterator, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupStateRootUpdatedIterator{contract: _ContractSFFLRegistryRollup.contract, event: "StateRootUpdated", logs: logs, sub: sub}, nil
}

// WatchStateRootUpdated is a free log subscription operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchStateRootUpdated(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupStateRootUpdated, rollupId []uint32, blockHeight []uint64) (event.Subscription, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupStateRootUpdated)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateRootUpdated is a log parse operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseStateRootUpdated(log types.Log) (*ContractSFFLRegistryRollupStateRootUpdated, error) {
	event := new(ContractSFFLRegistryRollupStateRootUpdated)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLRegistryRollupUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupUnpausedIterator struct {
	Event *ContractSFFLRegistryRollupUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupUnpaused represents a Unpaused event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractSFFLRegistryRollupUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupUnpausedIterator{contract: _ContractSFFLRegistryRollup.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupUnpaused)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseUnpaused(log types.Log) (*ContractSFFLRegistryRollupUnpaused, error) {
	event := new(ContractSFFLRegistryRollupUnpaused)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
