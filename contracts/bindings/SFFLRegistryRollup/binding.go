// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractSFFLRegistryRollup

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// OperatorSetUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type OperatorSetUpdateMessage struct {
	Id        uint64
	Timestamp uint64
	Operators []RollupOperatorsOperator
}

// RollupOperatorsOperator is an auto generated low-level Go binding around an user-defined struct.
type RollupOperatorsOperator struct {
	Pubkey BN254G1Point
	Weight *big.Int
}

// RollupOperatorsSignatureInfo is an auto generated low-level Go binding around an user-defined struct.
type RollupOperatorsSignatureInfo struct {
	NonSignerPubkeys []BN254G1Point
	ApkG2            BN254G2Point
	Sigma            BN254G1Point
}

// SFFLRegistryBaseProofParams is an auto generated low-level Go binding around an user-defined struct.
type SFFLRegistryBaseProofParams struct {
	Target             common.Address
	StorageKey         [32]byte
	StateTrieWitness   []byte
	StorageTrieWitness []byte
}

// StateRootUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type StateRootUpdateMessage struct {
	RollupId            uint32
	BlockHeight         uint64
	Timestamp           uint64
	NearDaTransactionId [32]byte
	NearDaCommitment    [32]byte
	StateRoot           [32]byte
}

// ContractSFFLRegistryRollupMetaData contains all meta data concerning the ContractSFFLRegistryRollup contract.
var ContractSFFLRegistryRollupMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"operators\",\"type\":\"tuple[]\",\"internalType\":\"structRollupOperators.Operator[]\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weight\",\"type\":\"uint128\",\"internalType\":\"uint128\"}]},{\"name\":\"quorumThreshold\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"operatorUpdateId\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"THRESHOLD_DENOMINATOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"getApk\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorWeight\",\"inputs\":[{\"name\":\"pubkeyHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getQuorumThreshold\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStateRoot\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTotalWeight\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"nextOperatorUpdateId\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setQuorumThreshold\",\"inputs\":[{\"name\":\"newQuorumThreshold\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAndGetStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"agreement\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateOperatorSet\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structOperatorSetUpdate.Message\",\"components\":[{\"name\":\"id\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"operators\",\"type\":\"tuple[]\",\"internalType\":\"structRollupOperators.Operator[]\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weight\",\"type\":\"uint128\",\"internalType\":\"uint128\"}]}]},{\"name\":\"signatureInfo\",\"type\":\"tuple\",\"internalType\":\"structRollupOperators.SignatureInfo\",\"components\":[{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateStateRoot\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"signatureInfo\",\"type\":\"tuple\",\"internalType\":\"structRollupOperators.SignatureInfo\",\"components\":[{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StateRootUpdated\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"indexed\":true,\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false}]",
	Bin: "",
}

// ContractSFFLRegistryRollupABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractSFFLRegistryRollupMetaData.ABI instead.
var ContractSFFLRegistryRollupABI = ContractSFFLRegistryRollupMetaData.ABI

// ContractSFFLRegistryRollupBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractSFFLRegistryRollupMetaData.Bin instead.
var ContractSFFLRegistryRollupBin = ContractSFFLRegistryRollupMetaData.Bin

// DeployContractSFFLRegistryRollup deploys a new Ethereum contract, binding an instance of ContractSFFLRegistryRollup to it.
func DeployContractSFFLRegistryRollup(auth *bind.TransactOpts, backend bind.ContractBackend, operators []RollupOperatorsOperator, quorumThreshold *big.Int, operatorUpdateId uint64) (common.Address, *types.Transaction, *ContractSFFLRegistryRollup, error) {
	parsed, err := ContractSFFLRegistryRollupMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractSFFLRegistryRollupBin), backend, operators, quorumThreshold, operatorUpdateId)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractSFFLRegistryRollup{ContractSFFLRegistryRollupCaller: ContractSFFLRegistryRollupCaller{contract: contract}, ContractSFFLRegistryRollupTransactor: ContractSFFLRegistryRollupTransactor{contract: contract}, ContractSFFLRegistryRollupFilterer: ContractSFFLRegistryRollupFilterer{contract: contract}}, nil
}

// ContractSFFLRegistryRollup is an auto generated Go binding around an Ethereum contract.
type ContractSFFLRegistryRollup struct {
	ContractSFFLRegistryRollupCaller     // Read-only binding to the contract
	ContractSFFLRegistryRollupTransactor // Write-only binding to the contract
	ContractSFFLRegistryRollupFilterer   // Log filterer for contract events
}

// ContractSFFLRegistryRollupCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractSFFLRegistryRollupFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLRegistryRollupSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSFFLRegistryRollupSession struct {
	Contract     *ContractSFFLRegistryRollup // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractSFFLRegistryRollupCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractSFFLRegistryRollupCallerSession struct {
	Contract *ContractSFFLRegistryRollupCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractSFFLRegistryRollupTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractSFFLRegistryRollupTransactorSession struct {
	Contract     *ContractSFFLRegistryRollupTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractSFFLRegistryRollupRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupRaw struct {
	Contract *ContractSFFLRegistryRollup // Generic contract binding to access the raw methods on
}

// ContractSFFLRegistryRollupCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupCallerRaw struct {
	Contract *ContractSFFLRegistryRollupCaller // Generic read-only contract binding to access the raw methods on
}

// ContractSFFLRegistryRollupTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractSFFLRegistryRollupTransactorRaw struct {
	Contract *ContractSFFLRegistryRollupTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractSFFLRegistryRollup creates a new instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollup(address common.Address, backend bind.ContractBackend) (*ContractSFFLRegistryRollup, error) {
	contract, err := bindContractSFFLRegistryRollup(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollup{ContractSFFLRegistryRollupCaller: ContractSFFLRegistryRollupCaller{contract: contract}, ContractSFFLRegistryRollupTransactor: ContractSFFLRegistryRollupTransactor{contract: contract}, ContractSFFLRegistryRollupFilterer: ContractSFFLRegistryRollupFilterer{contract: contract}}, nil
}

// NewContractSFFLRegistryRollupCaller creates a new read-only instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupCaller(address common.Address, caller bind.ContractCaller) (*ContractSFFLRegistryRollupCaller, error) {
	contract, err := bindContractSFFLRegistryRollup(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupCaller{contract: contract}, nil
}

// NewContractSFFLRegistryRollupTransactor creates a new write-only instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractSFFLRegistryRollupTransactor, error) {
	contract, err := bindContractSFFLRegistryRollup(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupTransactor{contract: contract}, nil
}

// NewContractSFFLRegistryRollupFilterer creates a new log filterer instance of ContractSFFLRegistryRollup, bound to a specific deployed contract.
func NewContractSFFLRegistryRollupFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractSFFLRegistryRollupFilterer, error) {
	contract, err := bindContractSFFLRegistryRollup(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupFilterer{contract: contract}, nil
}

// bindContractSFFLRegistryRollup binds a generic wrapper to an already deployed contract.
func bindContractSFFLRegistryRollup(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractSFFLRegistryRollupMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.ContractSFFLRegistryRollupTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLRegistryRollup.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.contract.Transact(opts, method, params...)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) THRESHOLDDENOMINATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "THRESHOLD_DENOMINATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.THRESHOLDDENOMINATOR(&_ContractSFFLRegistryRollup.CallOpts)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() pure returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.THRESHOLDDENOMINATOR(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetApk(opts *bind.CallOpts) (BN254G1Point, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getApk")

	if err != nil {
		return *new(BN254G1Point), err
	}

	out0 := *abi.ConvertType(out[0], new(BN254G1Point)).(*BN254G1Point)

	return out0, err

}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetApk() (BN254G1Point, error) {
	return _ContractSFFLRegistryRollup.Contract.GetApk(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetApk is a free data retrieval call binding the contract method 0x6f5b9918.
//
// Solidity: function getApk() view returns((uint256,uint256))
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetApk() (BN254G1Point, error) {
	return _ContractSFFLRegistryRollup.Contract.GetApk(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetOperatorWeight(opts *bind.CallOpts, pubkeyHash [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getOperatorWeight", pubkeyHash)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetOperatorWeight(pubkeyHash [32]byte) (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetOperatorWeight(&_ContractSFFLRegistryRollup.CallOpts, pubkeyHash)
}

// GetOperatorWeight is a free data retrieval call binding the contract method 0xdd64766e.
//
// Solidity: function getOperatorWeight(bytes32 pubkeyHash) view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetOperatorWeight(pubkeyHash [32]byte) (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetOperatorWeight(&_ContractSFFLRegistryRollup.CallOpts, pubkeyHash)
}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetQuorumThreshold(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getQuorumThreshold")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetQuorumThreshold() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetQuorumThreshold(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetQuorumThreshold is a free data retrieval call binding the contract method 0x4afa71b9.
//
// Solidity: function getQuorumThreshold() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetQuorumThreshold() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetQuorumThreshold(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetStateRoot(opts *bind.CallOpts, rollupId uint32, blockHeight uint64) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getStateRoot", rollupId, blockHeight)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStateRoot(&_ContractSFFLRegistryRollup.CallOpts, rollupId, blockHeight)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStateRoot(&_ContractSFFLRegistryRollup.CallOpts, rollupId, blockHeight)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetStorageValue(opts *bind.CallOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getStorageValue", message, proofParams)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStorageValue(&_ContractSFFLRegistryRollup.CallOpts, message, proofParams)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLRegistryRollup.Contract.GetStorageValue(&_ContractSFFLRegistryRollup.CallOpts, message, proofParams)
}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) GetTotalWeight(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "getTotalWeight")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) GetTotalWeight() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetTotalWeight(&_ContractSFFLRegistryRollup.CallOpts)
}

// GetTotalWeight is a free data retrieval call binding the contract method 0x06aba0e1.
//
// Solidity: function getTotalWeight() view returns(uint128)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) GetTotalWeight() (*big.Int, error) {
	return _ContractSFFLRegistryRollup.Contract.GetTotalWeight(&_ContractSFFLRegistryRollup.CallOpts)
}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) NextOperatorUpdateId(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "nextOperatorUpdateId")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) NextOperatorUpdateId() (uint64, error) {
	return _ContractSFFLRegistryRollup.Contract.NextOperatorUpdateId(&_ContractSFFLRegistryRollup.CallOpts)
}

// NextOperatorUpdateId is a free data retrieval call binding the contract method 0xe0f5d9f0.
//
// Solidity: function nextOperatorUpdateId() view returns(uint64)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) NextOperatorUpdateId() (uint64, error) {
	return _ContractSFFLRegistryRollup.Contract.NextOperatorUpdateId(&_ContractSFFLRegistryRollup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLRegistryRollup.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) Owner() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.Owner(&_ContractSFFLRegistryRollup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupCallerSession) Owner() (common.Address, error) {
	return _ContractSFFLRegistryRollup.Contract.Owner(&_ContractSFFLRegistryRollup.CallOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.RenounceOwnership(&_ContractSFFLRegistryRollup.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.RenounceOwnership(&_ContractSFFLRegistryRollup.TransactOpts)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) SetQuorumThreshold(opts *bind.TransactOpts, newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "setQuorumThreshold", newQuorumThreshold)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) SetQuorumThreshold(newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetQuorumThreshold(&_ContractSFFLRegistryRollup.TransactOpts, newQuorumThreshold)
}

// SetQuorumThreshold is a paid mutator transaction binding the contract method 0x2db52ea5.
//
// Solidity: function setQuorumThreshold(uint128 newQuorumThreshold) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) SetQuorumThreshold(newQuorumThreshold *big.Int) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.SetQuorumThreshold(&_ContractSFFLRegistryRollup.TransactOpts, newQuorumThreshold)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.TransferOwnership(&_ContractSFFLRegistryRollup.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.TransferOwnership(&_ContractSFFLRegistryRollup.TransactOpts, newOwner)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateAndGetStorageValue(opts *bind.TransactOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateAndGetStorageValue", message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateAndGetStorageValue(&_ContractSFFLRegistryRollup.TransactOpts, message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateAndGetStorageValue(&_ContractSFFLRegistryRollup.TransactOpts, message, proofParams, agreement)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x82616b7b.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateOperatorSet(opts *bind.TransactOpts, message OperatorSetUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateOperatorSet", message, signatureInfo)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x82616b7b.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateOperatorSet(message OperatorSetUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateOperatorSet(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateOperatorSet is a paid mutator transaction binding the contract method 0x82616b7b.
//
// Solidity: function updateOperatorSet((uint64,uint64,((uint256,uint256),uint128)[]) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateOperatorSet(message OperatorSetUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateOperatorSet(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x1fb4d411.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactor) UpdateStateRoot(opts *bind.TransactOpts, message StateRootUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.contract.Transact(opts, "updateStateRoot", message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x1fb4d411.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupSession) UpdateStateRoot(message StateRootUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateStateRoot(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x1fb4d411.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, ((uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256)) signatureInfo) returns()
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupTransactorSession) UpdateStateRoot(message StateRootUpdateMessage, signatureInfo RollupOperatorsSignatureInfo) (*types.Transaction, error) {
	return _ContractSFFLRegistryRollup.Contract.UpdateStateRoot(&_ContractSFFLRegistryRollup.TransactOpts, message, signatureInfo)
}

// ContractSFFLRegistryRollupOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupOwnershipTransferredIterator struct {
	Event *ContractSFFLRegistryRollupOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupOwnershipTransferred represents a OwnershipTransferred event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractSFFLRegistryRollupOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupOwnershipTransferredIterator{contract: _ContractSFFLRegistryRollup.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupOwnershipTransferred)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseOwnershipTransferred(log types.Log) (*ContractSFFLRegistryRollupOwnershipTransferred, error) {
	event := new(ContractSFFLRegistryRollupOwnershipTransferred)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLRegistryRollupStateRootUpdatedIterator is returned from FilterStateRootUpdated and is used to iterate over the raw logs and unpacked data for StateRootUpdated events raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupStateRootUpdatedIterator struct {
	Event *ContractSFFLRegistryRollupStateRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLRegistryRollupStateRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLRegistryRollupStateRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLRegistryRollupStateRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLRegistryRollupStateRootUpdated represents a StateRootUpdated event raised by the ContractSFFLRegistryRollup contract.
type ContractSFFLRegistryRollupStateRootUpdated struct {
	RollupId    uint32
	BlockHeight uint64
	StateRoot   [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStateRootUpdated is a free log retrieval operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) FilterStateRootUpdated(opts *bind.FilterOpts, rollupId []uint32, blockHeight []uint64) (*ContractSFFLRegistryRollupStateRootUpdatedIterator, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.FilterLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLRegistryRollupStateRootUpdatedIterator{contract: _ContractSFFLRegistryRollup.contract, event: "StateRootUpdated", logs: logs, sub: sub}, nil
}

// WatchStateRootUpdated is a free log subscription operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) WatchStateRootUpdated(opts *bind.WatchOpts, sink chan<- *ContractSFFLRegistryRollupStateRootUpdated, rollupId []uint32, blockHeight []uint64) (event.Subscription, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLRegistryRollup.contract.WatchLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLRegistryRollupStateRootUpdated)
				if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateRootUpdated is a log parse operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLRegistryRollup *ContractSFFLRegistryRollupFilterer) ParseStateRootUpdated(log types.Log) (*ContractSFFLRegistryRollupStateRootUpdated, error) {
	event := new(ContractSFFLRegistryRollupStateRootUpdated)
	if err := _ContractSFFLRegistryRollup.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
