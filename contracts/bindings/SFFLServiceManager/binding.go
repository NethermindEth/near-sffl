// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractSFFLServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// SFFLRegistryBaseProofParams is an auto generated low-level Go binding around an user-defined struct.
type SFFLRegistryBaseProofParams struct {
	Target             common.Address
	StorageKey         [32]byte
	StateTrieWitness   []byte
	StorageTrieWitness []byte
}

// StateRootUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type StateRootUpdateMessage struct {
	RollupId        uint32
	BlockHeight     uint64
	NearBlockHeight uint64
	StateRoot       [32]byte
}

// ContractSFFLServiceManagerMetaData contains all meta data concerning the ContractSFFLServiceManager contract.
var ContractSFFLServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"contractIDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"},{\"internalType\":\"contractIRegistryCoordinator\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contractIStakeRegistry\",\"name\":\"_stakeRegistry\",\"type\":\"address\"},{\"internalType\":\"contractSFFLTaskManager\",\"name\":\"_taskManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rollupId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"name\":\"StateRootUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"deregisterOperatorFromAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operatorAddr\",\"type\":\"address\"}],\"name\":\"freezeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRestakedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRestakeableStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rollupId\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"}],\"name\":\"getStateRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rollupId\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nearBlockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"structStateRootUpdate.Message\",\"name\":\"message\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"storageKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"stateTrieWitness\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"storageTrieWitness\",\"type\":\"bytes\"}],\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"name\":\"proofParams\",\"type\":\"tuple\"}],\"name\":\"getStorageValue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"}],\"name\":\"registerOperatorToAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"setMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskManager\",\"outputs\":[{\"internalType\":\"contractSFFLTaskManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rollupId\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nearBlockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"structStateRootUpdate.Message\",\"name\":\"message\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"storageKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"stateTrieWitness\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"storageTrieWitness\",\"type\":\"bytes\"}],\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"name\":\"proofParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"agreement\",\"type\":\"bytes\"}],\"name\":\"updateAndGetStorageValue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rollupId\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nearBlockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"structStateRootUpdate.Message\",\"name\":\"message\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point[]\",\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point[]\",\"name\":\"quorumApks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\"}],\"name\":\"updateStateRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "",
}

// ContractSFFLServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractSFFLServiceManagerMetaData.ABI instead.
var ContractSFFLServiceManagerABI = ContractSFFLServiceManagerMetaData.ABI

// ContractSFFLServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractSFFLServiceManagerMetaData.Bin instead.
var ContractSFFLServiceManagerBin = ContractSFFLServiceManagerMetaData.Bin

// DeployContractSFFLServiceManager deploys a new Ethereum contract, binding an instance of ContractSFFLServiceManager to it.
func DeployContractSFFLServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _delegationManager common.Address, _registryCoordinator common.Address, _stakeRegistry common.Address, _taskManager common.Address) (common.Address, *types.Transaction, *ContractSFFLServiceManager, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractSFFLServiceManagerBin), backend, _delegationManager, _registryCoordinator, _stakeRegistry, _taskManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// ContractSFFLServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractSFFLServiceManager struct {
	ContractSFFLServiceManagerCaller     // Read-only binding to the contract
	ContractSFFLServiceManagerTransactor // Write-only binding to the contract
	ContractSFFLServiceManagerFilterer   // Log filterer for contract events
}

// ContractSFFLServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractSFFLServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSFFLServiceManagerSession struct {
	Contract     *ContractSFFLServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractSFFLServiceManagerCallerSession struct {
	Contract *ContractSFFLServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractSFFLServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractSFFLServiceManagerTransactorSession struct {
	Contract     *ContractSFFLServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractSFFLServiceManagerRaw struct {
	Contract *ContractSFFLServiceManager // Generic contract binding to access the raw methods on
}

// ContractSFFLServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCallerRaw struct {
	Contract *ContractSFFLServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractSFFLServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactorRaw struct {
	Contract *ContractSFFLServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractSFFLServiceManager creates a new instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManager(address common.Address, backend bind.ContractBackend) (*ContractSFFLServiceManager, error) {
	contract, err := bindContractSFFLServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// NewContractSFFLServiceManagerCaller creates a new read-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractSFFLServiceManagerCaller, error) {
	contract, err := bindContractSFFLServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerCaller{contract: contract}, nil
}

// NewContractSFFLServiceManagerTransactor creates a new write-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractSFFLServiceManagerTransactor, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerTransactor{contract: contract}, nil
}

// NewContractSFFLServiceManagerFilterer creates a new log filterer instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractSFFLServiceManagerFilterer, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerFilterer{contract: contract}, nil
}

// bindContractSFFLServiceManager binds a generic wrapper to an already deployed contract.
func bindContractSFFLServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transact(opts, method, params...)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStateRoot(opts *bind.CallOpts, rollupId uint32, blockHeight uint64) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStateRoot", rollupId, blockHeight)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStorageValue(opts *bind.CallOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStorageValue", message, proofParams)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) TaskManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "taskManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) FreezeOperator(opts *bind.TransactOpts, operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "freezeOperator", operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) Initialize(opts *bind.TransactOpts, initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "initialize", initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Initialize(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) Initialize(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) SetMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "setMetadataURI", _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateAndGetStorageValue(opts *bind.TransactOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateAndGetStorageValue", message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0xd5b206a3.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateStateRoot(opts *bind.TransactOpts, message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateStateRoot", message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0xd5b206a3.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0xd5b206a3.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// ContractSFFLServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitializedIterator struct {
	Event *ContractSFFLServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerInitialized represents a Initialized event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractSFFLServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerInitializedIterator{contract: _ContractSFFLServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerInitialized)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractSFFLServiceManagerInitialized, error) {
	event := new(ContractSFFLServiceManagerInitialized)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferredIterator struct {
	Event *ContractSFFLServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractSFFLServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerOwnershipTransferredIterator{contract: _ContractSFFLServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerOwnershipTransferred)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractSFFLServiceManagerOwnershipTransferred, error) {
	event := new(ContractSFFLServiceManagerOwnershipTransferred)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerStateRootUpdatedIterator is returned from FilterStateRootUpdated and is used to iterate over the raw logs and unpacked data for StateRootUpdated events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdatedIterator struct {
	Event *ContractSFFLServiceManagerStateRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerStateRootUpdated represents a StateRootUpdated event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdated struct {
	RollupId    uint32
	BlockHeight uint64
	StateRoot   [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStateRootUpdated is a free log retrieval operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterStateRootUpdated(opts *bind.FilterOpts, rollupId []uint32, blockHeight []uint64) (*ContractSFFLServiceManagerStateRootUpdatedIterator, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerStateRootUpdatedIterator{contract: _ContractSFFLServiceManager.contract, event: "StateRootUpdated", logs: logs, sub: sub}, nil
}

// WatchStateRootUpdated is a free log subscription operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchStateRootUpdated(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerStateRootUpdated, rollupId []uint32, blockHeight []uint64) (event.Subscription, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerStateRootUpdated)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateRootUpdated is a log parse operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseStateRootUpdated(log types.Log) (*ContractSFFLServiceManagerStateRootUpdated, error) {
	event := new(ContractSFFLServiceManagerStateRootUpdated)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
