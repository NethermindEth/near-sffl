// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractSFFLServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// SFFLRegistryBaseProofParams is an auto generated low-level Go binding around an user-defined struct.
type SFFLRegistryBaseProofParams struct {
	Target             common.Address
	StorageKey         [32]byte
	StateTrieWitness   []byte
	StorageTrieWitness []byte
}

// StateRootUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type StateRootUpdateMessage struct {
	RollupId            uint32
	BlockHeight         uint64
	Timestamp           uint64
	NearDaTransactionId [32]byte
	NearDaCommitment    [32]byte
	StateRoot           [32]byte
}

// ContractSFFLServiceManagerMetaData contains all meta data concerning the ContractSFFLServiceManager contract.
var ContractSFFLServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_delegationManager\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"},{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"},{\"name\":\"_taskManager\",\"type\":\"address\",\"internalType\":\"contractSFFLTaskManager\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"freezeOperator\",\"inputs\":[{\"name\":\"operatorAddr\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStateRoot\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"initialOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"taskManager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractSFFLTaskManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAndGetStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"agreement\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateStateRoot\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StateRootUpdated\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"indexed\":true,\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false}]",
	Bin: "0x6101006040523480156200001257600080fd5b50604051620037eb380380620037eb83398101604081905262000035916200014f565b6001600160a01b0380851660a052808416608052821660c0528383836200005b62000074565b5050506001600160a01b031660e05250620001b7915050565b603354610100900460ff1615620000e15760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60335460ff908116101562000134576033805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200014c57600080fd5b50565b600080600080608085870312156200016657600080fd5b8451620001738162000136565b6020860151909450620001868162000136565b6040860151909350620001998162000136565b6060860151909250620001ac8162000136565b939692955090935050565b60805160a05160c05160e05161358a62000261600039600081816101d3015281816108c40152818161121601526112520152600081816105e40152818161073f015281816107d601528181610e9a0152818161101d01526110bc01526000818161096701528181610a300152610b0401526000818161040b0152818161049a0152818161051a015281816109dc01528181610aa801528181610dd80152610f78015261358a6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639926ee7d11610097578063c4d66de811610066578063c4d66de814610208578063d5d4bb5a1461021b578063e481af9d1461022e578063f2fde38b1461023657600080fd5b80639926ee7d146101a8578063a364f4da146101bb578063a50a640e146101ce578063b3a9e53b146101f557600080fd5b806338c8ee64116100d357806338c8ee6414610155578063715018a614610168578063750521f5146101705780638da5cb5b1461018357600080fd5b80630f5af14a146100fa5780632f65284e1461010f57806333cfb7b714610135575b600080fd5b61010d6101083660046129a6565b610249565b005b61012261011d366004612a0e565b6102c3565b6040519081526020015b60405180910390f35b610148610143366004612ac6565b6103e6565b60405161012c9190612ae3565b61010d610163366004612ac6565b6108b9565b61010d610934565b61010d61017e366004612be3565b610948565b6066546001600160a01b03165b6040516001600160a01b03909116815260200161012c565b61010d6101b6366004612c2b565b6109d1565b61010d6101c9366004612ac6565b610a9d565b6101907f000000000000000000000000000000000000000000000000000000000000000081565b610122610203366004612d03565b610b33565b61010d610216366004612ac6565b610b62565b610122610229366004612d38565b610c74565b610148610dd2565b61010d610244366004612ac6565b61119b565b6102538282611211565b6102955760405162461bcd60e51b815260206004820152600e60248201526d145d5bdc9d5b481b9bdd081b595d60921b60448201526064015b60405180910390fd5b6102bf6102a56020840184612d86565b6102b56040850160208601612da3565b8460a00135611346565b5050565b60006060850135158015906102db5750608085013515155b6103275760405162461bcd60e51b815260206004820152601860248201527f456d707479204e45415220444120636f6d6d69746d656e740000000000000000604482015260640161028c565b600080806103386020890189612d86565b63ffffffff1663ffffffff16815260200190815260200160002060008760200160208101906103679190612da3565b6001600160401b031681526020810191909152604001600020549050806103d257826103c75760405162461bcd60e51b815260206004820152600f60248201526e115b5c1d1e481859dc99595b595b9d608a1b604482015260640161028c565b6103d28685856113aa565b6103dc8686610c74565b9695505050505050565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104769190612dbe565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa1580156104e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105059190612dd7565b90506001600160c01b038116158061059f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190612e00565b60ff16155b156105bf5760408051600080825260208201909252905b50949350505050565b60006105d3826001600160c01b03166113bb565b90506000805b82518110156106a9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f584838151811061062357610623612e23565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190612dbe565b6106959083612e4f565b9150806106a181612e67565b9150506105d9565b506000816001600160401b038111156106c4576106c4612b30565b6040519080825280602002602001820160405280156106ed578160200160208202803683370190505b5090506000805b84518110156108ac57600085828151811061071157610711612e23565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa9190612dbe565b905060005b81811015610896576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015610824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108489190612e82565b6000015186868151811061085e5761085e612e23565b6001600160a01b03909216602092830291909101909101528461088081612e67565b955050808061088e90612e67565b9150506107af565b50505080806108a490612e67565b9150506106f4565b5090979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109315760405162461bcd60e51b815260206004820152601f60248201527f5461736b206d616e61676572206d757374206265207468652063616c6c657200604482015260640161028c565b50565b61093c611418565b6109466000611472565b565b610950611418565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb3559061099c908490600401612f49565b600060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b5050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a195760405162461bcd60e51b815260040161028c90612f5c565b604051639926ee7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d90610a679085908590600401612fd4565b600060405180830381600087803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ae55760405162461bcd60e51b815260040161028c90612f5c565b6040516351b27a6d60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da9060240161099c565b63ffffffff82166000908152602081815260408083206001600160401b03851684529091529020545b92915050565b603354610100900460ff1615808015610b825750603354600160ff909116105b80610b9c5750303b158015610b9c575060335460ff166001145b610bff5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028c565b6033805460ff191660011790558015610c22576033805461ff0019166101001790555b610c2b82611472565b80156102bf576033805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6000808080610c866020870187612d86565b63ffffffff1663ffffffff1681526020019081526020016000206000856020016020810190610cb59190612da3565b6001600160401b03166001600160401b031681526020019081526020016000205490508360a001358114610d2b5760405162461bcd60e51b815260206004820152601760248201527f4d69736d61746368696e6720737461746520726f6f7473000000000000000000604482015260640161028c565b610dca610d3b6020850185612ac6565b602085013583610d4e604088018861301f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d9092505050606089018961301f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506114c492505050565b949350505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e589190612e00565b60ff16905080610e7657505060408051600081526020810190915290565b6000805b82811015610f2b57604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d9190612dbe565b610f179083612e4f565b915080610f2381612e67565b915050610e7a565b506000816001600160401b03811115610f4657610f46612b30565b604051908082528060200260200182016040528015610f6f578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff89190612e00565b60ff1681101561119157604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110909190612dbe565b905060005b8181101561117c576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa15801561110a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112e9190612e82565b6000015185858151811061114457611144612e23565b6001600160a01b03909216602092830291909101909101528361116681612e67565b945050808061117490612e67565b915050611095565b5050808061118990612e67565b915050610f76565b5090949350505050565b6111a3611418565b6001600160a01b0381166112085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028c565b61093181611472565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663292f7a4e61124c86611601565b438660037f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef0244586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d2919061306c565b6112dd906002613089565b6112e791906130cb565b6040518563ffffffff1660e01b81526004016113069493929190613282565b6040805180830381865afa158015611322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b691906133e1565b63ffffffff83166000818152602081815260408083206001600160401b03871680855290835292819020859055518481529192917fca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8910160405180910390a3505050565b816113b58482610249565b50505050565b60606000805b610100811015611411576001811b91508382161561140157828160f81b6040516020016113ef929190613414565b60405160208183030381529060405292505b61140a81612e67565b90506113c1565b5050919050565b6066546001600160a01b031633146109465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028c565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516bffffffffffffffffffffffff19606087901b16602082015260009081908190611504906034016040516020818303038152906040528688611631565b915091508161154e5760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d08191bd95cc81b9bdd08195e1a5cdd60521b604482015260640161028c565b60006115598261165a565b905060008061158e8a60405160200161157491815260200190565b604051602081830303815290604052888560400151611631565b91509150816115df5760405162461bcd60e51b815260206004820152601c60248201527f53746f726167652076616c756520646f6573206e6f7420657869737400000000604482015260640161028c565b6115f06115eb8261171e565b611751565b955050505050505b95945050505050565b6000816040516020016116149190613443565b604051602081830303815290604052805190602001209050919050565b60006060600061164086611780565b905061164d8186866117b2565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906116878361188d565b905060405180608001604052806116b7836000815181106116aa576116aa612e23565b60200260200101516118c0565b81526020016116d2836001815181106116aa576116aa612e23565b81526020016116fa836002815181106116ed576116ed612e23565b60200260200101516118c7565b8152602001611715836003815181106116ed576116ed612e23565b90529392505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610b5c906119c9565b600080600060208451111561176757602061176a565b83515b60209485015194036008029390931c9392505050565b6060818051906020012060405160200161179c91815260200190565b6040516020818303038152906040529050919050565b6000606060006117c185611a50565b905060008060006117d3848a89611b4a565b815192955090935091501580806117e75750815b6118335760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e000000000000604482015260640161028c565b60008161184f576040518060200160405280600081525061187b565b61187b8661185e6001886134af565b8151811061186e5761186e612e23565b6020026020010151611f6e565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610b5c90611f98565b6000610b5c825b600060218260000151111561191e5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161028c565b600080600061192c85612184565b919450925090506000816001811115611947576119476134c6565b146119945760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161028c565b60008386602001516119a69190612e4f565b805190915060208410156103dc5760208490036101000a90049695505050505050565b606060008060006119d985612184565b9194509250905060008160018111156119f4576119f46134c6565b14611a415760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e0000000000000000604482015260640161028c565b6115f8856020015184846124ce565b60606000611a5d8361188d565b9050600081516001600160401b03811115611a7a57611a7a612b30565b604051908082528060200260200182016040528015611abf57816020015b6040805180820190915260608082526020820152815260200190600190039081611a985790505b50905060005b8251811015611b42576000611af2848381518110611ae557611ae5612e23565b60200260200101516119c9565b90506040518060400160405280828152602001611b0e8361188d565b815250838381518110611b2357611b23612e23565b6020026020010181905250508080611b3a90612e67565b915050611ac5565b509392505050565b60006060818080611b5a876125a9565b90506000869050600080611b81604051806040016040528060608152602001606081525090565b60005b8c51811015611f46578c8181518110611b9f57611b9f612e23565b602002602001015191508284611bb59190612e4f565b9350611bc2600188612e4f565b965083611c1a57815180516020909101208514611c155760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b604482015260640161028c565b611cd7565b815151602011611c7c57815180516020909101208514611c155760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c20686173680000000000604482015260640161028c565b84611c8a83600001516126e3565b14611cd75760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f64652068617368000000000000604482015260640161028c565b611ce360106001612e4f565b8260200151511415611d5c578551841415611cfd57611f46565b6000868581518110611d1157611d11612e23565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611d3c57611d3c612e23565b60200260200101519050611d4f8161270b565b9650600194505050611f34565b60028260200151511415611eec576000611d7583612741565b9050600081600081518110611d8c57611d8c612e23565b016020015160f81c90506000611da36002836134dc565b611dae9060026134fe565b90506000611dbf848360ff16612765565b90506000611dcd8b8a612765565b90506000611ddb838361279b565b905060ff851660021480611df2575060ff85166003145b15611e2c57808351148015611e075750808251145b15611e1957611e16818b612e4f565b99505b50600160ff1b9950611f46945050505050565b60ff85161580611e3f575060ff85166001145b15611e955782518114611e5f5750600160ff1b9950611f46945050505050565b611e868860200151600181518110611e7957611e79612e23565b602002602001015161270b565b9a509750611f34945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b606482015260840161028c565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e000000604482015260640161028c565b80611f3e81612e67565b915050611b84565b50600160ff1b841486611f598786612765565b909e909d50909b509950505050505050505050565b60208101518051606091610b5c91611f88906001906134af565b81518110611ae557611ae5612e23565b6060600080611fa684612184565b91935090915060019050816001811115611fc257611fc26134c6565b1461200f5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e000000000000000000604482015260640161028c565b6040805160208082526104208201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816120285790505090506000835b865181101561217957602082106120c15760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b606482015260840161028c565b6000806120fe6040518060400160405280858c600001516120e291906134af565b8152602001858c602001516120f79190612e4f565b9052612184565b50915091506040518060400160405280838361211a9190612e4f565b8152602001848b6020015161212f9190612e4f565b81525085858151811061214457612144612e23565b602090810291909101015261215a600185612e4f565b93506121668183612e4f565b6121709084612e4f565b92505050612055565b508152949350505050565b6000806000808460000151116121dc5760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e0000000000000000604482015260640161028c565b6020840151805160001a607f81116122015760006001600094509450945050506124c7565b60b7811161227d5760006122166080836134af565b90508087600001511161226b5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e00000000000000604482015260640161028c565b600195509350600092506124c7915050565b60bf811161236c57600061229260b7836134af565b9050808760000151116122e75760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e00604482015260640161028c565b600183015160208290036101000a90046123018183612e4f565b8851116123505760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e0000000000000000604482015260640161028c565b61235b826001612e4f565b96509450600093506124c792505050565b60f781116123e757600061238160c0836134af565b9050808760000151116123d65760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e000000000000000000604482015260640161028c565b6001955093508492506124c7915050565b60006123f460f7836134af565b9050808760000151116124495760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e000000604482015260640161028c565b600183015160208290036101000a90046124638183612e4f565b8851116124ab5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b604482015260640161028c565b6124b6826001612e4f565b96509450600193506124c792505050565b9193909250565b60606000826001600160401b038111156124ea576124ea612b30565b6040519080825280601f01601f191660200182016040528015612514576020820181803683370190505b5090508051600014156125285790506125a2565b60006125348587612e4f565b90506020820160005b612548602087613521565b81101561257f578251825261255e602084612e4f565b925061256b602083612e4f565b91508061257781612e67565b91505061253d565b5080519151601f86166020036101000a6000190192831692191691909117905290505b9392505050565b60606000825160026125bb9190613535565b6001600160401b038111156125d2576125d2612b30565b6040519080825280601f01601f1916602001820160405280156125fc576020820181803683370190505b50905060005b83518110156126dc57600484828151811061261f5761261f612e23565b01602001516001600160f81b031916901c8261263c836002613535565b8151811061264c5761264c612e23565b60200101906001600160f81b031916908160001a905350601084828151811061267757612677612e23565b0160200151612689919060f81c6134dc565b60f81b82612698836002613535565b6126a3906001612e4f565b815181106126b3576126b3612e23565b60200101906001600160f81b031916908160001a905350806126d481612e67565b915050612602565b5092915050565b60006020825110156126f757506020015190565b81806020019051810190610b5c9190612dbe565b6000606060208360000151101561272c5761272583612817565b9050612738565b612735836119c9565b90505b6125a2816126e3565b6060610b5c6127608360200151600081518110611ae557611ae5612e23565b6125a9565b6060825182106127845750604080516020810190915260008152610b5c565b6125a2838384865161279691906134af565b612822565b6000805b8084511180156127af5750808351115b801561280057508281815181106127c8576127c8612e23565b602001015160f81c60f81b6001600160f81b0319168482815181106127ef576127ef612e23565b01602001516001600160f81b031916145b156125a2578061280f81612e67565b91505061279f565b6060610b5c82612978565b60608161283081601f612e4f565b101561286f5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161028c565b8261287a8382612e4f565b10156128b95760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161028c565b6128c38284612e4f565b845110156129075760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161028c565b60608215801561292657604051915060008252602082016040526105b6565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561295f578051835260209283019201612947565b5050858452601f01601f19166040525050949350505050565b6060610b5c8260200151600084600001516124ce565b600060c082840312156129a057600080fd5b50919050565b60008060e083850312156129b957600080fd5b6129c3848461298e565b915060c08301356001600160401b038111156129de57600080fd5b830161018081860312156129f157600080fd5b809150509250929050565b6000608082840312156129a057600080fd5b6000806000806101008587031215612a2557600080fd5b612a2f868661298e565b935060c08501356001600160401b0380821115612a4b57600080fd5b612a57888389016129fc565b945060e0870135915080821115612a6d57600080fd5b818701915087601f830112612a8157600080fd5b813581811115612a9057600080fd5b886020828501011115612aa257600080fd5b95989497505060200194505050565b6001600160a01b038116811461093157600080fd5b600060208284031215612ad857600080fd5b81356125a281612ab1565b6020808252825182820181905260009190848201906040850190845b81811015612b245783516001600160a01b031683529284019291840191600101612aff565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715612b6857612b68612b30565b60405290565b60006001600160401b0380841115612b8857612b88612b30565b604051601f8501601f19908116603f01168101908282118183101715612bb057612bb0612b30565b81604052809350858152868686011115612bc957600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215612bf557600080fd5b81356001600160401b03811115612c0b57600080fd5b8201601f81018413612c1c57600080fd5b610dca84823560208401612b6e565b60008060408385031215612c3e57600080fd5b8235612c4981612ab1565b915060208301356001600160401b0380821115612c6557600080fd5b9084019060608287031215612c7957600080fd5b612c81612b46565b823582811115612c9057600080fd5b83019150601f82018713612ca357600080fd5b612cb287833560208501612b6e565b815260208301356020820152604083013560408201528093505050509250929050565b63ffffffff8116811461093157600080fd5b80356001600160401b0381168114612cfe57600080fd5b919050565b60008060408385031215612d1657600080fd5b8235612d2181612cd5565b9150612d2f60208401612ce7565b90509250929050565b60008060e08385031215612d4b57600080fd5b612d55848461298e565b915060c08301356001600160401b03811115612d7057600080fd5b612d7c858286016129fc565b9150509250929050565b600060208284031215612d9857600080fd5b81356125a281612cd5565b600060208284031215612db557600080fd5b6125a282612ce7565b600060208284031215612dd057600080fd5b5051919050565b600060208284031215612de957600080fd5b81516001600160c01b03811681146125a257600080fd5b600060208284031215612e1257600080fd5b815160ff811681146125a257600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612e6257612e62612e39565b500190565b6000600019821415612e7b57612e7b612e39565b5060010190565b600060408284031215612e9457600080fd5b604051604081018181106001600160401b0382111715612eb657612eb6612b30565b6040528251612ec481612ab1565b815260208301516bffffffffffffffffffffffff81168114612ee557600080fd5b60208201529392505050565b60005b83811015612f0c578181015183820152602001612ef4565b838111156113b55750506000910152565b60008151808452612f35816020860160208601612ef1565b601f01601f19169290920160200192915050565b6020815260006125a26020830184612f1d565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b60018060a01b0383168152604060208201526000825160606040840152612ffe60a0840182612f1d565b90506020840151606084015260408401516080840152809150509392505050565b6000808335601e1984360301811261303657600080fd5b8301803591506001600160401b0382111561305057600080fd5b60200191503681900382131561306557600080fd5b9250929050565b60006020828403121561307e57600080fd5b81516125a281612cd5565b600063ffffffff808316818516818304811182151516156130ac576130ac612e39565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff808416806130e2576130e26130b5565b92169190910492915050565b6000808335601e1984360301811261310557600080fd5b83016020810192503590506001600160401b0381111561312457600080fd5b8060051b360383131561306557600080fd5b8183526000602080850194508260005b8581101561317157813561315981612cd5565b63ffffffff1687529582019590820190600101613146565b509495945050505050565b6000808335601e1984360301811261319357600080fd5b83016020810192503590506001600160401b038111156131b257600080fd5b8060061b360383131561306557600080fd5b81835260208301925060008160005b848110156131fb578135865260208083013590870152604095860195909101906001016131d3565b5093949350505050565b604081833760408201600081526040808301823750600060808301525050565b81835260006020808501808196508560051b810191508460005b8781101561327557828403895261325682886130ee565b613261868284613136565b9a87019a955050509084019060010161323f565b5091979650505050505050565b84815260a06020820152600160a0820152600060c082015263ffffffff8416604082015260e0606082015260006132b984856130ee565b61018060e08501526132d061026085018284613136565b9150506132e0602086018661317c565b60df1980868503016101008701526132f98483856131c4565b9350613308604089018961317c565b935091506101208187860301818801526133238585856131c4565b9450610140935061333984880160608b01613205565b60e08901356101c08801526101008901356101e088015261335c818a018a6130ee565b935090508187860301610200880152613376858483613136565b945050613385838901896130ee565b93509150808685030161022087015261339f848484613136565b93506133af6101608901896130ee565b935091508086850301610240870152506133ca838383613225565b93505050506115f8608083018463ffffffff169052565b600080604083850312156133f457600080fd5b8251801515811461340457600080fd5b6020939093015192949293505050565b60008351613426818460208801612ef1565b6001600160f81b0319939093169190920190815260010192915050565b60c08101823561345281612cd5565b63ffffffff16825261346660208401612ce7565b6001600160401b0380821660208501528061348360408701612ce7565b1660408501525050606083013560608301526080830135608083015260a083013560a083015292915050565b6000828210156134c1576134c1612e39565b500390565b634e487b7160e01b600052602160045260246000fd5b600060ff8316806134ef576134ef6130b5565b8060ff84160691505092915050565b600060ff821660ff84168082101561351857613518612e39565b90039392505050565b600082613530576135306130b5565b500490565b600081600019048311821515161561354f5761354f612e39565b50029056fea2646970667358221220fb8e2c12a5e0e085f1448f24506f16e0a743a2d48850ff844893fa8c02f731a664736f6c634300080c0033",
}

// ContractSFFLServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractSFFLServiceManagerMetaData.ABI instead.
var ContractSFFLServiceManagerABI = ContractSFFLServiceManagerMetaData.ABI

// ContractSFFLServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractSFFLServiceManagerMetaData.Bin instead.
var ContractSFFLServiceManagerBin = ContractSFFLServiceManagerMetaData.Bin

// DeployContractSFFLServiceManager deploys a new Ethereum contract, binding an instance of ContractSFFLServiceManager to it.
func DeployContractSFFLServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _delegationManager common.Address, _registryCoordinator common.Address, _stakeRegistry common.Address, _taskManager common.Address) (common.Address, *types.Transaction, *ContractSFFLServiceManager, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractSFFLServiceManagerBin), backend, _delegationManager, _registryCoordinator, _stakeRegistry, _taskManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// ContractSFFLServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractSFFLServiceManager struct {
	ContractSFFLServiceManagerCaller     // Read-only binding to the contract
	ContractSFFLServiceManagerTransactor // Write-only binding to the contract
	ContractSFFLServiceManagerFilterer   // Log filterer for contract events
}

// ContractSFFLServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractSFFLServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSFFLServiceManagerSession struct {
	Contract     *ContractSFFLServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractSFFLServiceManagerCallerSession struct {
	Contract *ContractSFFLServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractSFFLServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractSFFLServiceManagerTransactorSession struct {
	Contract     *ContractSFFLServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractSFFLServiceManagerRaw struct {
	Contract *ContractSFFLServiceManager // Generic contract binding to access the raw methods on
}

// ContractSFFLServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCallerRaw struct {
	Contract *ContractSFFLServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractSFFLServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactorRaw struct {
	Contract *ContractSFFLServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractSFFLServiceManager creates a new instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManager(address common.Address, backend bind.ContractBackend) (*ContractSFFLServiceManager, error) {
	contract, err := bindContractSFFLServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// NewContractSFFLServiceManagerCaller creates a new read-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractSFFLServiceManagerCaller, error) {
	contract, err := bindContractSFFLServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerCaller{contract: contract}, nil
}

// NewContractSFFLServiceManagerTransactor creates a new write-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractSFFLServiceManagerTransactor, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerTransactor{contract: contract}, nil
}

// NewContractSFFLServiceManagerFilterer creates a new log filterer instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractSFFLServiceManagerFilterer, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerFilterer{contract: contract}, nil
}

// bindContractSFFLServiceManager binds a generic wrapper to an already deployed contract.
func bindContractSFFLServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transact(opts, method, params...)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStateRoot(opts *bind.CallOpts, rollupId uint32, blockHeight uint64) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStateRoot", rollupId, blockHeight)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStorageValue(opts *bind.CallOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStorageValue", message, proofParams)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) TaskManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "taskManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) FreezeOperator(opts *bind.TransactOpts, operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "freezeOperator", operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) Initialize(opts *bind.TransactOpts, initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "initialize", initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Initialize(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) Initialize(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) SetMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "setMetadataURI", _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateAndGetStorageValue(opts *bind.TransactOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateAndGetStorageValue", message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x0f5af14a.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateStateRoot(opts *bind.TransactOpts, message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateStateRoot", message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x0f5af14a.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x0f5af14a.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// ContractSFFLServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitializedIterator struct {
	Event *ContractSFFLServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerInitialized represents a Initialized event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractSFFLServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerInitializedIterator{contract: _ContractSFFLServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerInitialized)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractSFFLServiceManagerInitialized, error) {
	event := new(ContractSFFLServiceManagerInitialized)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferredIterator struct {
	Event *ContractSFFLServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractSFFLServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerOwnershipTransferredIterator{contract: _ContractSFFLServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerOwnershipTransferred)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractSFFLServiceManagerOwnershipTransferred, error) {
	event := new(ContractSFFLServiceManagerOwnershipTransferred)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerStateRootUpdatedIterator is returned from FilterStateRootUpdated and is used to iterate over the raw logs and unpacked data for StateRootUpdated events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdatedIterator struct {
	Event *ContractSFFLServiceManagerStateRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerStateRootUpdated represents a StateRootUpdated event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdated struct {
	RollupId    uint32
	BlockHeight uint64
	StateRoot   [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStateRootUpdated is a free log retrieval operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterStateRootUpdated(opts *bind.FilterOpts, rollupId []uint32, blockHeight []uint64) (*ContractSFFLServiceManagerStateRootUpdatedIterator, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerStateRootUpdatedIterator{contract: _ContractSFFLServiceManager.contract, event: "StateRootUpdated", logs: logs, sub: sub}, nil
}

// WatchStateRootUpdated is a free log subscription operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchStateRootUpdated(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerStateRootUpdated, rollupId []uint32, blockHeight []uint64) (event.Subscription, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerStateRootUpdated)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateRootUpdated is a log parse operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseStateRootUpdated(log types.Log) (*ContractSFFLServiceManagerStateRootUpdated, error) {
	event := new(ContractSFFLServiceManagerStateRootUpdated)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
