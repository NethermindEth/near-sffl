// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractSFFLServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// SFFLRegistryBaseProofParams is an auto generated low-level Go binding around an user-defined struct.
type SFFLRegistryBaseProofParams struct {
	Target             common.Address
	StorageKey         [32]byte
	StateTrieWitness   []byte
	StorageTrieWitness []byte
}

// StateRootUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type StateRootUpdateMessage struct {
	RollupId            uint32
	BlockHeight         uint64
	Timestamp           uint64
	NearDaTransactionId [32]byte
	NearDaCommitment    [32]byte
	StateRoot           [32]byte
}

// ContractSFFLServiceManagerMetaData contains all meta data concerning the ContractSFFLServiceManager contract.
var ContractSFFLServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_avsDirectory\",\"type\":\"address\",\"internalType\":\"contractIAVSDirectory\"},{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"},{\"name\":\"_taskManager\",\"type\":\"address\",\"internalType\":\"contractSFFLTaskManager\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"PAUSED_UPDATE_STATE_ROOT\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"avsDirectory\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"freezeOperator\",\"inputs\":[{\"name\":\"operatorAddr\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStateRoot\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"initialOwner\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_pauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"initialOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pauseAll\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauserRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPauserRegistry\",\"inputs\":[{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"taskManager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractSFFLTaskManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"unpause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAVSMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAndGetStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"agreement\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateStateRoot\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearDaTransactionId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"nearDaCommitment\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Paused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PauserRegistrySet\",\"inputs\":[{\"name\":\"pauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StateRootUpdated\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"indexed\":true,\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Unpaused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false}]",
	Bin: "0x6101006040523480156200001257600080fd5b506040516200429a3803806200429a83398101604081905262000035916200014f565b6001600160a01b0380851660c052808416608052821660a0528383836200005b62000074565b5050506001600160a01b031660e05250620001b7915050565b603354610100900460ff1615620000e15760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60335460ff908116101562000134576033805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200014c57600080fd5b50565b600080600080608085870312156200016657600080fd5b8451620001738162000136565b6020860151909450620001868162000136565b6040860151909350620001998162000136565b6060860151909250620001ac8162000136565b939692955090935050565b60805160a05160c05160e051614032620002686000396000818161030d01528181610c700152818161187a01526118b601526000818161027e01528181610eee01528181610fc2015261104101526000818161099001528181610aeb01528181610b82015281816113a20152818161152501526115c40152600081816107b701528181610846015281816108c601528181610e9a01528181610f66015281816112e0015261148001526140326000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a98fb35511610097578063d5d4bb5a11610071578063d5d4bb5a14610368578063e481af9d1461037b578063f2fde38b14610383578063fabc1cbc1461039657600080fd5b8063a98fb3551461032f578063b3a9e53b14610342578063c4d66de81461035557600080fd5b8063715018a6146102b6578063886f1195146102be5780638da5cb5b146102d15780639926ee7d146102e2578063a364f4da146102f5578063a50a640e1461030857600080fd5b806338c8ee641161013057806338c8ee6414610213578063485cc95514610226578063595c6a67146102395780635ac86ab7146102415780635c975abb146102745780636b3aa72e1461027c57600080fd5b80630510c191146101785780630f5af14a1461019757806310d67a2f146101ac578063136439dd146101bf5780632f65284e146101d257806333cfb7b7146101f3575b600080fd5b610180600081565b60405160ff90911681526020015b60405180910390f35b6101aa6101a53660046132e2565b6103a9565b005b6101aa6101ba36600461334d565b61047d565b6101aa6101cd36600461336a565b610530565b6101e56101e0366004613395565b61066f565b60405190815260200161018e565b61020661020136600461334d565b610792565b60405161018e9190613438565b6101aa61022136600461334d565b610c65565b6101aa610234366004613485565b610cdd565b6101aa610db4565b61026461024f3660046134c2565b60cb54600160ff9092169190911b9081161490565b604051901515815260200161018e565b60cb546101e5565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161018e565b6101aa610e7b565b60ca5461029e906001600160a01b031681565b6066546001600160a01b031661029e565b6101aa6102f0366004613592565b610e8f565b6101aa61030336600461334d565b610f5b565b61029e7f000000000000000000000000000000000000000000000000000000000000000081565b6101aa61033d36600461363c565b611022565b6101e56103503660046136b2565b611076565b6101aa61036336600461334d565b6110a5565b6101e56103763660046136e7565b61117c565b6102066112da565b6101aa61039136600461334d565b6116a3565b6101aa6103a436600461336a565b611719565b60cb54600090600190811614156104075760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064015b60405180910390fd5b6104118383611875565b61044e5760405162461bcd60e51b815260206004820152600e60248201526d145d5bdc9d5b481b9bdd081b595d60921b60448201526064016103fe565b61047861045e6020850185613735565b61046e6040860160208701613752565b8560a001356119aa565b505050565b60ca60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f4919061376d565b6001600160a01b0316336001600160a01b0316146105245760405162461bcd60e51b81526004016103fe9061378a565b61052d81611a0e565b50565b60ca5460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c91906137e4565b6105b85760405162461bcd60e51b81526004016103fe906137ff565b60cb54818116146106315760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016103fe565b60cb81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60006060850135158015906106875750608085013515155b6106d35760405162461bcd60e51b815260206004820152601860248201527f456d707479204e45415220444120636f6d6d69746d656e74000000000000000060448201526064016103fe565b600080806106e46020890189613735565b63ffffffff1663ffffffff16815260200190815260200160002060008760200160208101906107139190613752565b6001600160401b0316815260208101919091526040016000205490508061077e57826107735760405162461bcd60e51b815260206004820152600f60248201526e115b5c1d1e481859dc99595b595b9d608a1b60448201526064016103fe565b61077e868585611b05565b610788868661117c565b9695505050505050565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa1580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190613847565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa15801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b19190613860565b90506001600160c01b038116158061094b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190613889565b60ff16155b1561096b5760408051600080825260208201909252905b50949350505050565b600061097f826001600160c01b0316611b16565b90506000805b8251811015610a55577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f58483815181106109cf576109cf6138a6565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190613847565b610a4190836138d2565b915080610a4d816138ea565b915050610985565b506000816001600160401b03811115610a7057610a706134df565b604051908082528060200260200182016040528015610a99578160200160208202803683370190505b5090506000805b8451811015610c58576000858281518110610abd57610abd6138a6565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa158015610b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b569190613847565b905060005b81811015610c42576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015610bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf49190613905565b60000151868681518110610c0a57610c0a6138a6565b6001600160a01b039092166020928302919091019091015284610c2c816138ea565b9550508080610c3a906138ea565b915050610b5b565b5050508080610c50906138ea565b915050610aa0565b5090979650505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461052d5760405162461bcd60e51b815260206004820152601f60248201527f5461736b206d616e61676572206d757374206265207468652063616c6c65720060448201526064016103fe565b603354610100900460ff1615808015610cfd5750603354600160ff909116105b80610d175750303b158015610d17575060335460ff166001145b610d335760405162461bcd60e51b81526004016103fe90613974565b6033805460ff191660011790558015610d56576033805461ff0019166101001790555b610d5f83611bd8565b610d6a826000611c2a565b8015610478576033805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60ca5460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2091906137e4565b610e3c5760405162461bcd60e51b81526004016103fe906137ff565b60001960cb81905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b610e83611d10565b610e8d6000611bd8565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ed75760405162461bcd60e51b81526004016103fe906139c2565b604051639926ee7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d90610f259085908590600401613a87565b600060405180830381600087803b158015610f3f57600080fd5b505af1158015610f53573d6000803e3d6000fd5b505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fa35760405162461bcd60e51b81526004016103fe906139c2565b6040516351b27a6d60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da906024015b600060405180830381600087803b15801561100757600080fd5b505af115801561101b573d6000803e3d6000fd5b5050505050565b61102a611d10565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb35590610fed908490600401613ad2565b63ffffffff82166000908152602081815260408083206001600160401b03851684529091529020545b92915050565b603354610100900460ff16158080156110c55750603354600160ff909116105b806110df5750303b1580156110df575060335460ff166001145b6110fb5760405162461bcd60e51b81526004016103fe90613974565b6033805460ff19166001179055801561111e576033805461ff0019166101001790555b61112782611d6a565b611132600080611c2a565b8015611178576033805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600080808061118e6020870187613735565b63ffffffff1663ffffffff16815260200190815260200160002060008560200160208101906111bd9190613752565b6001600160401b03166001600160401b031681526020019081526020016000205490508360a0013581146112335760405162461bcd60e51b815260206004820152601760248201527f4d69736d61746368696e6720737461746520726f6f747300000000000000000060448201526064016103fe565b6112d2611243602085018561334d565b6020850135836112566040880188613ae5565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611298925050506060890189613ae5565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611dd592505050565b949350505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561133c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113609190613889565b60ff1690508061137e57505060408051600081526020810190915290565b6000805b8281101561143357604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa1580156113f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114159190613847565b61141f90836138d2565b91508061142b816138ea565b915050611382565b506000816001600160401b0381111561144e5761144e6134df565b604051908082528060200260200182016040528015611477578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115009190613889565b60ff1681101561169957604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015611574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115989190613847565b905060005b81811015611684576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015611612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116369190613905565b6000015185858151811061164c5761164c6138a6565b6001600160a01b03909216602092830291909101909101528361166e816138ea565b945050808061167c906138ea565b91505061159d565b50508080611691906138ea565b91505061147e565b5090949350505050565b6116ab611d10565b6001600160a01b0381166117105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fe565b61052d81611bd8565b60ca60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561176c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611790919061376d565b6001600160a01b0316336001600160a01b0316146117c05760405162461bcd60e51b81526004016103fe9061378a565b60cb5419811960cb5419161461183e5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016103fe565b60cb81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610664565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663292f7a4e6118b086611f12565b438660037f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef0244586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119369190613b32565b611941906002613b4f565b61194b9190613b91565b6040518563ffffffff1660e01b815260040161196a9493929190613d3e565b6040805180830381865afa158015611986573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190613e9d565b63ffffffff83166000818152602081815260408083206001600160401b03871680855290835292819020859055518481529192917fca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8910160405180910390a3505050565b6001600160a01b038116611a9c5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016103fe565b60ca54604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a160ca80546001600160a01b0319166001600160a01b0392909216919091179055565b81611b1084826103a9565b50505050565b6060600080611b2484611f42565b61ffff166001600160401b03811115611b3f57611b3f6134df565b6040519080825280601f01601f191660200182016040528015611b69576020820181803683370190505b5090506000805b825182108015611b81575061010081105b15611699576001811b935085841615611bc8578060f81b838381518110611baa57611baa6138a6565b60200101906001600160f81b031916908160001a9053508160010191505b611bd1816138ea565b9050611b70565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60ca546001600160a01b0316158015611c4b57506001600160a01b03821615155b611ccd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016103fe565b60cb81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a261117882611a0e565b6066546001600160a01b03163314610e8d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fe565b603354610100900460ff166117105760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103fe565b6040516bffffffffffffffffffffffff19606087901b16602082015260009081908190611e15906034016040516020818303038152906040528688611f6d565b9150915081611e5f5760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d08191bd95cc81b9bdd08195e1a5cdd60521b60448201526064016103fe565b6000611e6a82611f96565b9050600080611e9f8a604051602001611e8591815260200190565b604051602081830303815290604052888560400151611f6d565b9150915081611ef05760405162461bcd60e51b815260206004820152601c60248201527f53746f726167652076616c756520646f6573206e6f742065786973740000000060448201526064016103fe565b611f01611efc8261205a565b61208d565b955050505050505b95945050505050565b600081604051602001611f259190613ec9565b604051602081830303815290604052805190602001209050919050565b6000805b821561109f57611f57600184613f35565b9092169180611f6581613f4c565b915050611f46565b600060606000611f7c866120bc565b9050611f898186866120ee565b9250925050935093915050565b604080516080810182526000808252602082018190529181018290526060810182905290611fc3836121c9565b90506040518060800160405280611ff383600081518110611fe657611fe66138a6565b60200260200101516121fc565b815260200161200e83600181518110611fe657611fe66138a6565b815260200161203683600281518110612029576120296138a6565b6020026020010151612203565b815260200161205183600381518110612029576120296138a6565b90529392505050565b60408051808201825260008082526020918201528151808301909252825182528083019082015260609061109f90612305565b60008060006020845111156120a35760206120a6565b83515b60209485015194036008029390931c9392505050565b606081805190602001206040516020016120d891815260200190565b6040516020818303038152906040529050919050565b6000606060006120fd8561238c565b9050600080600061210f848a89612486565b815192955090935091501580806121235750815b61216f5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016103fe565b60008161218b57604051806020016040528060008152506121b7565b6121b78661219a600188613f35565b815181106121aa576121aa6138a6565b60200260200101516128aa565b919b919a509098505050505050505050565b60408051808201825260008082526020918201528151808301909252825182528083019082015260609061109f906128d4565b600061109f825b600060218260000151111561225a5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016103fe565b600080600061226885612ac0565b91945092509050600081600181111561228357612283613f6e565b146122d05760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016103fe565b60008386602001516122e291906138d2565b805190915060208410156107885760208490036101000a90049695505050505050565b6060600080600061231585612ac0565b91945092509050600081600181111561233057612330613f6e565b1461237d5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016103fe565b611f0985602001518484612e0a565b60606000612399836121c9565b9050600081516001600160401b038111156123b6576123b66134df565b6040519080825280602002602001820160405280156123fb57816020015b60408051808201909152606080825260208201528152602001906001900390816123d45790505b50905060005b825181101561247e57600061242e848381518110612421576124216138a6565b6020026020010151612305565b9050604051806040016040528082815260200161244a836121c9565b81525083838151811061245f5761245f6138a6565b6020026020010181905250508080612476906138ea565b915050612401565b509392505050565b6000606081808061249687612ee5565b905060008690506000806124bd604051806040016040528060608152602001606081525090565b60005b8c51811015612882578c81815181106124db576124db6138a6565b6020026020010151915082846124f191906138d2565b93506124fe6001886138d2565b965083612556578151805160209091012085146125515760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016103fe565b612613565b8151516020116125b8578151805160209091012085146125515760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016103fe565b846125c6836000015161301f565b146126135760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016103fe565b61261f601060016138d2565b826020015151141561269857855184141561263957612882565b600086858151811061264d5761264d6138a6565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110612678576126786138a6565b6020026020010151905061268b81613047565b9650600194505050612870565b600282602001515114156128285760006126b18361307d565b90506000816000815181106126c8576126c86138a6565b016020015160f81c905060006126df600283613f84565b6126ea906002613fa6565b905060006126fb848360ff166130a1565b905060006127098b8a6130a1565b9050600061271783836130d7565b905060ff85166002148061272e575060ff85166003145b15612768578083511480156127435750808251145b1561275557612752818b6138d2565b99505b50600160ff1b9950612882945050505050565b60ff8516158061277b575060ff85166001145b156127d1578251811461279b5750600160ff1b9950612882945050505050565b6127c288602001516001815181106127b5576127b56138a6565b6020026020010151613047565b9a509750612870945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016103fe565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016103fe565b8061287a816138ea565b9150506124c0565b50600160ff1b84148661289587866130a1565b909e909d50909b509950505050505050505050565b6020810151805160609161109f916128c490600190613f35565b81518110612421576124216138a6565b60606000806128e284612ac0565b919350909150600190508160018111156128fe576128fe613f6e565b1461294b5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016103fe565b6040805160208082526104208201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816129645790505090506000835b8651811015612ab557602082106129fd5760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016103fe565b600080612a3a6040518060400160405280858c60000151612a1e9190613f35565b8152602001858c60200151612a3391906138d2565b9052612ac0565b509150915060405180604001604052808383612a5691906138d2565b8152602001848b60200151612a6b91906138d2565b815250858581518110612a8057612a806138a6565b6020908102919091010152612a966001856138d2565b9350612aa281836138d2565b612aac90846138d2565b92505050612991565b508152949350505050565b600080600080846000015111612b185760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016103fe565b6020840151805160001a607f8111612b3d576000600160009450945094505050612e03565b60b78111612bb9576000612b52608083613f35565b905080876000015111612ba75760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016103fe565b60019550935060009250612e03915050565b60bf8111612ca8576000612bce60b783613f35565b905080876000015111612c235760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016103fe565b600183015160208290036101000a9004612c3d81836138d2565b885111612c8c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016103fe565b612c978260016138d2565b9650945060009350612e0392505050565b60f78111612d23576000612cbd60c083613f35565b905080876000015111612d125760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016103fe565b600195509350849250612e03915050565b6000612d3060f783613f35565b905080876000015111612d855760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016103fe565b600183015160208290036101000a9004612d9f81836138d2565b885111612de75760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016103fe565b612df28260016138d2565b9650945060019350612e0392505050565b9193909250565b60606000826001600160401b03811115612e2657612e266134df565b6040519080825280601f01601f191660200182016040528015612e50576020820181803683370190505b509050805160001415612e64579050612ede565b6000612e7085876138d2565b90506020820160005b612e84602087613fc9565b811015612ebb5782518252612e9a6020846138d2565b9250612ea76020836138d2565b915080612eb3816138ea565b915050612e79565b5080519151601f86166020036101000a6000190192831692191691909117905290505b9392505050565b6060600082516002612ef79190613fdd565b6001600160401b03811115612f0e57612f0e6134df565b6040519080825280601f01601f191660200182016040528015612f38576020820181803683370190505b50905060005b8351811015613018576004848281518110612f5b57612f5b6138a6565b01602001516001600160f81b031916901c82612f78836002613fdd565b81518110612f8857612f886138a6565b60200101906001600160f81b031916908160001a9053506010848281518110612fb357612fb36138a6565b0160200151612fc5919060f81c613f84565b60f81b82612fd4836002613fdd565b612fdf9060016138d2565b81518110612fef57612fef6138a6565b60200101906001600160f81b031916908160001a90535080613010816138ea565b915050612f3e565b5092915050565b600060208251101561303357506020015190565b8180602001905181019061109f9190613847565b600060606020836000015110156130685761306183613153565b9050613074565b61307183612305565b90505b612ede8161301f565b606061109f61309c8360200151600081518110612421576124216138a6565b612ee5565b6060825182106130c0575060408051602081019091526000815261109f565b612ede83838486516130d29190613f35565b61315e565b6000805b8084511180156130eb5750808351115b801561313c5750828181518110613104576131046138a6565b602001015160f81c60f81b6001600160f81b03191684828151811061312b5761312b6138a6565b01602001516001600160f81b031916145b15612ede578061314b816138ea565b9150506130db565b606061109f826132b4565b60608161316c81601f6138d2565b10156131ab5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103fe565b826131b683826138d2565b10156131f55760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103fe565b6131ff82846138d2565b845110156132435760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103fe565b6060821580156132625760405191506000825260208201604052610962565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561329b578051835260209283019201613283565b5050858452601f01601f19166040525050949350505050565b606061109f826020015160008460000151612e0a565b600060c082840312156132dc57600080fd5b50919050565b60008060e083850312156132f557600080fd5b6132ff84846132ca565b915060c08301356001600160401b0381111561331a57600080fd5b8301610180818603121561332d57600080fd5b809150509250929050565b6001600160a01b038116811461052d57600080fd5b60006020828403121561335f57600080fd5b8135612ede81613338565b60006020828403121561337c57600080fd5b5035919050565b6000608082840312156132dc57600080fd5b60008060008061010085870312156133ac57600080fd5b6133b686866132ca565b935060c08501356001600160401b03808211156133d257600080fd5b6133de88838901613383565b945060e08701359150808211156133f457600080fd5b818701915087601f83011261340857600080fd5b81358181111561341757600080fd5b88602082850101111561342957600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b818110156134795783516001600160a01b031683529284019291840191600101613454565b50909695505050505050565b6000806040838503121561349857600080fd5b82356134a381613338565b9150602083013561332d81613338565b60ff8116811461052d57600080fd5b6000602082840312156134d457600080fd5b8135612ede816134b3565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715613517576135176134df565b60405290565b60006001600160401b0380841115613537576135376134df565b604051601f8501601f19908116603f0116810190828211818310171561355f5761355f6134df565b8160405280935085815286868601111561357857600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156135a557600080fd5b82356135b081613338565b915060208301356001600160401b03808211156135cc57600080fd5b90840190606082870312156135e057600080fd5b6135e86134f5565b8235828111156135f757600080fd5b83019150601f8201871361360a57600080fd5b6136198783356020850161351d565b815260208301356020820152604083013560408201528093505050509250929050565b60006020828403121561364e57600080fd5b81356001600160401b0381111561366457600080fd5b8201601f8101841361367557600080fd5b6112d28482356020840161351d565b63ffffffff8116811461052d57600080fd5b80356001600160401b03811681146136ad57600080fd5b919050565b600080604083850312156136c557600080fd5b82356136d081613684565b91506136de60208401613696565b90509250929050565b60008060e083850312156136fa57600080fd5b61370484846132ca565b915060c08301356001600160401b0381111561371f57600080fd5b61372b85828601613383565b9150509250929050565b60006020828403121561374757600080fd5b8135612ede81613684565b60006020828403121561376457600080fd5b612ede82613696565b60006020828403121561377f57600080fd5b8151612ede81613338565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b805180151581146136ad57600080fd5b6000602082840312156137f657600080fd5b612ede826137d4565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b60006020828403121561385957600080fd5b5051919050565b60006020828403121561387257600080fd5b81516001600160c01b0381168114612ede57600080fd5b60006020828403121561389b57600080fd5b8151612ede816134b3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156138e5576138e56138bc565b500190565b60006000198214156138fe576138fe6138bc565b5060010190565b60006040828403121561391757600080fd5b604051604081018181106001600160401b0382111715613939576139396134df565b604052825161394781613338565b815260208301516bffffffffffffffffffffffff8116811461396857600080fd5b60208201529392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b6000815180845260005b81811015613a6057602081850181015186830182015201613a44565b81811115613a72576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b0383168152604060208201526000825160606040840152613ab160a0840182613a3a565b90506020840151606084015260408401516080840152809150509392505050565b602081526000612ede6020830184613a3a565b6000808335601e19843603018112613afc57600080fd5b8301803591506001600160401b03821115613b1657600080fd5b602001915036819003821315613b2b57600080fd5b9250929050565b600060208284031215613b4457600080fd5b8151612ede81613684565b600063ffffffff80831681851681830481118215151615613b7257613b726138bc565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680613ba857613ba8613b7b565b92169190910492915050565b6000808335601e19843603018112613bcb57600080fd5b83016020810192503590506001600160401b03811115613bea57600080fd5b8060051b3603831315613b2b57600080fd5b8183526000602080850194508260005b85811015613c37578135613c1f81613684565b63ffffffff1687529582019590820190600101613c0c565b509495945050505050565b6000808335601e19843603018112613c5957600080fd5b83016020810192503590506001600160401b03811115613c7857600080fd5b8060061b3603831315613b2b57600080fd5b81835260208301925060008160005b84811015613cc157813586526020808301359087015260409586019590910190600101613c99565b5093949350505050565b604081833760408201600081526040808301823750600060808301525050565b60008383855260208086019550808560051b8301018460005b87811015610c5857848303601f19018952613d1f8288613bb4565b613d2a858284613bfc565b9a86019a9450505090830190600101613d04565b84815260a06020820152600160a0820152600060c082015263ffffffff8416604082015260e060608201526000613d758485613bb4565b61018060e0850152613d8c61026085018284613bfc565b915050613d9c6020860186613c42565b60df198086850301610100870152613db5848385613c8a565b9350613dc46040890189613c42565b93509150610120818786030181880152613ddf858585613c8a565b94506101409350613df584880160608b01613ccb565b60e08901356101c08801526101008901356101e0880152613e18818a018a613bb4565b935090508187860301610200880152613e32858483613bfc565b945050613e4183890189613bb4565b935091508086850301610220870152613e5b848484613bfc565b9350613e6b610160890189613bb4565b93509150808685030161024087015250613e86838383613ceb565b9350505050611f09608083018463ffffffff169052565b60008060408385031215613eb057600080fd5b613eb9836137d4565b9150602083015190509250929050565b60c081018235613ed881613684565b63ffffffff168252613eec60208401613696565b6001600160401b03808216602085015280613f0960408701613696565b1660408501525050606083013560608301526080830135608083015260a083013560a083015292915050565b600082821015613f4757613f476138bc565b500390565b600061ffff80831681811415613f6457613f646138bc565b6001019392505050565b634e487b7160e01b600052602160045260246000fd5b600060ff831680613f9757613f97613b7b565b8060ff84160691505092915050565b600060ff821660ff841680821015613fc057613fc06138bc565b90039392505050565b600082613fd857613fd8613b7b565b500490565b6000816000190483118215151615613ff757613ff76138bc565b50029056fea26469706673582212206b49f44a732073e27c3a9e378dc6ca5f71dbb87cad49c70ab565d3ea98612a5f64736f6c634300080c0033",
}

// ContractSFFLServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractSFFLServiceManagerMetaData.ABI instead.
var ContractSFFLServiceManagerABI = ContractSFFLServiceManagerMetaData.ABI

// ContractSFFLServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractSFFLServiceManagerMetaData.Bin instead.
var ContractSFFLServiceManagerBin = ContractSFFLServiceManagerMetaData.Bin

// DeployContractSFFLServiceManager deploys a new Ethereum contract, binding an instance of ContractSFFLServiceManager to it.
func DeployContractSFFLServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _avsDirectory common.Address, _registryCoordinator common.Address, _stakeRegistry common.Address, _taskManager common.Address) (common.Address, *types.Transaction, *ContractSFFLServiceManager, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractSFFLServiceManagerBin), backend, _avsDirectory, _registryCoordinator, _stakeRegistry, _taskManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// ContractSFFLServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractSFFLServiceManager struct {
	ContractSFFLServiceManagerCaller     // Read-only binding to the contract
	ContractSFFLServiceManagerTransactor // Write-only binding to the contract
	ContractSFFLServiceManagerFilterer   // Log filterer for contract events
}

// ContractSFFLServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractSFFLServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSFFLServiceManagerSession struct {
	Contract     *ContractSFFLServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractSFFLServiceManagerCallerSession struct {
	Contract *ContractSFFLServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractSFFLServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractSFFLServiceManagerTransactorSession struct {
	Contract     *ContractSFFLServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractSFFLServiceManagerRaw struct {
	Contract *ContractSFFLServiceManager // Generic contract binding to access the raw methods on
}

// ContractSFFLServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCallerRaw struct {
	Contract *ContractSFFLServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractSFFLServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactorRaw struct {
	Contract *ContractSFFLServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractSFFLServiceManager creates a new instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManager(address common.Address, backend bind.ContractBackend) (*ContractSFFLServiceManager, error) {
	contract, err := bindContractSFFLServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// NewContractSFFLServiceManagerCaller creates a new read-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractSFFLServiceManagerCaller, error) {
	contract, err := bindContractSFFLServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerCaller{contract: contract}, nil
}

// NewContractSFFLServiceManagerTransactor creates a new write-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractSFFLServiceManagerTransactor, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerTransactor{contract: contract}, nil
}

// NewContractSFFLServiceManagerFilterer creates a new log filterer instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractSFFLServiceManagerFilterer, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerFilterer{contract: contract}, nil
}

// bindContractSFFLServiceManager binds a generic wrapper to an already deployed contract.
func bindContractSFFLServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transact(opts, method, params...)
}

// PAUSEDUPDATESTATEROOT is a free data retrieval call binding the contract method 0x0510c191.
//
// Solidity: function PAUSED_UPDATE_STATE_ROOT() view returns(uint8)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) PAUSEDUPDATESTATEROOT(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "PAUSED_UPDATE_STATE_ROOT")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// PAUSEDUPDATESTATEROOT is a free data retrieval call binding the contract method 0x0510c191.
//
// Solidity: function PAUSED_UPDATE_STATE_ROOT() view returns(uint8)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) PAUSEDUPDATESTATEROOT() (uint8, error) {
	return _ContractSFFLServiceManager.Contract.PAUSEDUPDATESTATEROOT(&_ContractSFFLServiceManager.CallOpts)
}

// PAUSEDUPDATESTATEROOT is a free data retrieval call binding the contract method 0x0510c191.
//
// Solidity: function PAUSED_UPDATE_STATE_ROOT() view returns(uint8)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) PAUSEDUPDATESTATEROOT() (uint8, error) {
	return _ContractSFFLServiceManager.Contract.PAUSEDUPDATESTATEROOT(&_ContractSFFLServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) AvsDirectory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "avsDirectory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) AvsDirectory() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.AvsDirectory(&_ContractSFFLServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) AvsDirectory() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.AvsDirectory(&_ContractSFFLServiceManager.CallOpts)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStateRoot(opts *bind.CallOpts, rollupId uint32, blockHeight uint64) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStateRoot", rollupId, blockHeight)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStorageValue(opts *bind.CallOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStorageValue", message, proofParams)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xd5d4bb5a.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Paused(index uint8) (bool, error) {
	return _ContractSFFLServiceManager.Contract.Paused(&_ContractSFFLServiceManager.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) Paused(index uint8) (bool, error) {
	return _ContractSFFLServiceManager.Contract.Paused(&_ContractSFFLServiceManager.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Paused0() (*big.Int, error) {
	return _ContractSFFLServiceManager.Contract.Paused0(&_ContractSFFLServiceManager.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) Paused0() (*big.Int, error) {
	return _ContractSFFLServiceManager.Contract.Paused0(&_ContractSFFLServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) PauserRegistry() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.PauserRegistry(&_ContractSFFLServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.PauserRegistry(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) TaskManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "taskManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) FreezeOperator(opts *bind.TransactOpts, operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "freezeOperator", operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address initialOwner, address _pauserRegistry) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) Initialize(opts *bind.TransactOpts, initialOwner common.Address, _pauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "initialize", initialOwner, _pauserRegistry)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address initialOwner, address _pauserRegistry) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Initialize(initialOwner common.Address, _pauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner, _pauserRegistry)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address initialOwner, address _pauserRegistry) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) Initialize(initialOwner common.Address, _pauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner, _pauserRegistry)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) Initialize0(opts *bind.TransactOpts, initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "initialize0", initialOwner)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Initialize0(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize0(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) Initialize0(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize0(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Pause(&_ContractSFFLServiceManager.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Pause(&_ContractSFFLServiceManager.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) PauseAll() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.PauseAll(&_ContractSFFLServiceManager.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.PauseAll(&_ContractSFFLServiceManager.TransactOpts)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetPauserRegistry(&_ContractSFFLServiceManager.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetPauserRegistry(&_ContractSFFLServiceManager.TransactOpts, newPauserRegistry)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Unpause(&_ContractSFFLServiceManager.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Unpause(&_ContractSFFLServiceManager.TransactOpts, newPausedStatus)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateAVSMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateAVSMetadataURI", _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAVSMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAVSMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateAndGetStorageValue(opts *bind.TransactOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateAndGetStorageValue", message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0x2f65284e.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x0f5af14a.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateStateRoot(opts *bind.TransactOpts, message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateStateRoot", message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x0f5af14a.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0x0f5af14a.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32,bytes32,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// ContractSFFLServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitializedIterator struct {
	Event *ContractSFFLServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerInitialized represents a Initialized event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractSFFLServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerInitializedIterator{contract: _ContractSFFLServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerInitialized)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractSFFLServiceManagerInitialized, error) {
	event := new(ContractSFFLServiceManagerInitialized)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferredIterator struct {
	Event *ContractSFFLServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractSFFLServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerOwnershipTransferredIterator{contract: _ContractSFFLServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerOwnershipTransferred)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractSFFLServiceManagerOwnershipTransferred, error) {
	event := new(ContractSFFLServiceManagerOwnershipTransferred)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerPausedIterator struct {
	Event *ContractSFFLServiceManagerPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerPaused represents a Paused event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractSFFLServiceManagerPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerPausedIterator{contract: _ContractSFFLServiceManager.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerPaused)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParsePaused(log types.Log) (*ContractSFFLServiceManagerPaused, error) {
	event := new(ContractSFFLServiceManagerPaused)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerPauserRegistrySetIterator struct {
	Event *ContractSFFLServiceManagerPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerPauserRegistrySet represents a PauserRegistrySet event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractSFFLServiceManagerPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerPauserRegistrySetIterator{contract: _ContractSFFLServiceManager.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerPauserRegistrySet)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParsePauserRegistrySet(log types.Log) (*ContractSFFLServiceManagerPauserRegistrySet, error) {
	event := new(ContractSFFLServiceManagerPauserRegistrySet)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerStateRootUpdatedIterator is returned from FilterStateRootUpdated and is used to iterate over the raw logs and unpacked data for StateRootUpdated events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdatedIterator struct {
	Event *ContractSFFLServiceManagerStateRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerStateRootUpdated represents a StateRootUpdated event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdated struct {
	RollupId    uint32
	BlockHeight uint64
	StateRoot   [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStateRootUpdated is a free log retrieval operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterStateRootUpdated(opts *bind.FilterOpts, rollupId []uint32, blockHeight []uint64) (*ContractSFFLServiceManagerStateRootUpdatedIterator, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerStateRootUpdatedIterator{contract: _ContractSFFLServiceManager.contract, event: "StateRootUpdated", logs: logs, sub: sub}, nil
}

// WatchStateRootUpdated is a free log subscription operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchStateRootUpdated(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerStateRootUpdated, rollupId []uint32, blockHeight []uint64) (event.Subscription, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerStateRootUpdated)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateRootUpdated is a log parse operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseStateRootUpdated(log types.Log) (*ContractSFFLServiceManagerStateRootUpdated, error) {
	event := new(ContractSFFLServiceManagerStateRootUpdated)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerUnpausedIterator struct {
	Event *ContractSFFLServiceManagerUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerUnpaused represents a Unpaused event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractSFFLServiceManagerUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerUnpausedIterator{contract: _ContractSFFLServiceManager.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerUnpaused)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseUnpaused(log types.Log) (*ContractSFFLServiceManagerUnpaused, error) {
	event := new(ContractSFFLServiceManagerUnpaused)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
