// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractSFFLServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// SFFLRegistryBaseProofParams is an auto generated low-level Go binding around an user-defined struct.
type SFFLRegistryBaseProofParams struct {
	Target             common.Address
	StorageKey         [32]byte
	StateTrieWitness   []byte
	StorageTrieWitness []byte
}

// StateRootUpdateMessage is an auto generated low-level Go binding around an user-defined struct.
type StateRootUpdateMessage struct {
	RollupId        uint32
	BlockHeight     uint64
	NearBlockHeight uint64
	StateRoot       [32]byte
}

// ContractSFFLServiceManagerMetaData contains all meta data concerning the ContractSFFLServiceManager contract.
var ContractSFFLServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_delegationManager\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"},{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"},{\"name\":\"_taskManager\",\"type\":\"address\",\"internalType\":\"contractSFFLTaskManager\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"freezeOperator\",\"inputs\":[{\"name\":\"operatorAddr\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStateRoot\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearBlockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"initialOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"taskManager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractSFFLTaskManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAndGetStorageValue\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearBlockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"proofParams\",\"type\":\"tuple\",\"internalType\":\"structSFFLRegistryBase.ProofParams\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"storageKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stateTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"storageTrieWitness\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"agreement\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateStateRoot\",\"inputs\":[{\"name\":\"message\",\"type\":\"tuple\",\"internalType\":\"structStateRootUpdate.Message\",\"components\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"nearBlockHeight\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StateRootUpdated\",\"inputs\":[{\"name\":\"rollupId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"blockHeight\",\"type\":\"uint64\",\"indexed\":true,\"internalType\":\"uint64\"},{\"name\":\"stateRoot\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false}]",
	Bin: "0x6101006040523480156200001257600080fd5b506040516200375c3803806200375c83398101604081905262000035916200014f565b6001600160a01b0380851660a052808416608052821660c0528383836200005b62000074565b5050506001600160a01b031660e05250620001b7915050565b600154610100900460ff1615620000e15760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60015460ff908116101562000134576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200014c57600080fd5b50565b600080600080608085870312156200016657600080fd5b8451620001738162000136565b6020860151909450620001868162000136565b6040860151909350620001998162000136565b6060860151909250620001ac8162000136565b939692955090935050565b60805160a05160c05160e0516134fb62000261600039600081816101a30152818161072b01528181611405015261144101526000818161044b015281816105a60152818161063d01528181610e3201528181610fb501526110540152600081816107d30152818161089c01526109700152600081816102720152818161030101528181610381015281816108480152818161091401528181610d700152610f1001526134fb6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a50a640e11610097578063ccd3bd9e11610066578063ccd3bd9e1461020c578063d5b206a31461021f578063e481af9d14610232578063f2fde38b1461023a57600080fd5b8063a50a640e1461019e578063b3a9e53b146101c5578063b708c083146101e6578063c4d66de8146101f957600080fd5b8063750521f5116100d3578063750521f5146101405780638da5cb5b146101535780639926ee7d14610178578063a364f4da1461018b57600080fd5b806333cfb7b7146100fa57806338c8ee6414610123578063715018a614610138575b600080fd5b61010d61010836600461293b565b61024d565b60405161011a9190612958565b60405180910390f35b61013661013136600461293b565b610720565b005b6101366107a0565b61013661014e366004612a58565b6107b4565b6034546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b610136610186366004612aa0565b61083d565b61013661019936600461293b565b610909565b6101607f000000000000000000000000000000000000000000000000000000000000000081565b6101d86101d3366004612b78565b61099f565b60405190815260200161011a565b6101d86101f4366004612bc5565b6109ce565b61013661020736600461293b565b610a8e565b6101d861021a366004612c67565b610b9b565b61013661022d366004612cb5565b610cf9565b61010d610d6a565b61013661024836600461293b565b611133565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa1580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190612d0b565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190612d24565b90506001600160c01b038116158061040657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104019190612d4d565b60ff16155b156104265760408051600080825260208201909252905b50949350505050565b600061043a826001600160c01b03166111a9565b90506000805b8251811015610510577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f584838151811061048a5761048a612d70565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f29190612d0b565b6104fc9083612d9c565b91508061050881612db4565b915050610440565b506000816001600160401b0381111561052b5761052b6129a5565b604051908082528060200260200182016040528015610554578160200160208202803683370190505b5090506000805b845181101561071357600085828151811061057857610578612d70565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa1580156105ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106119190612d0b565b905060005b818110156106fd576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa15801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190612dcf565b600001518686815181106106c5576106c5612d70565b6001600160a01b0390921660209283029190910190910152846106e781612db4565b95505080806106f590612db4565b915050610616565b505050808061070b90612db4565b91505061055b565b5090979650505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461079d5760405162461bcd60e51b815260206004820152601f60248201527f5461736b206d616e61676572206d757374206265207468652063616c6c65720060448201526064015b60405180910390fd5b50565b6107a8611206565b6107b26000611260565b565b6107bc611206565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb35590610808908490600401612e96565b600060405180830381600087803b15801561082257600080fd5b505af1158015610836573d6000803e3d6000fd5b5050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108855760405162461bcd60e51b815260040161079490612ea9565b604051639926ee7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d906108d39085908590600401612f21565b600060405180830381600087803b1580156108ed57600080fd5b505af1158015610901573d6000803e3d6000fd5b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109515760405162461bcd60e51b815260040161079490612ea9565b6040516351b27a6d60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da90602401610808565b63ffffffff82166000908152602081815260408083206001600160401b03851684529091529020545b92915050565b60008080806109e06020890189612f6c565b63ffffffff1663ffffffff1681526020019081526020016000206000876020016020810190610a0f9190612f89565b6001600160401b03168152602081019190915260400160002054905080610a7a5782610a6f5760405162461bcd60e51b815260206004820152600f60248201526e115b5c1d1e481859dc99595b595b9d608a1b6044820152606401610794565b610a7a8685856112b2565b610a848686610b9b565b9695505050505050565b600154610100900460ff1615808015610aab57506001805460ff16105b80610ac45750303b158015610ac457506001805460ff16145b610b275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610794565b6001805460ff1916811790558015610b49576001805461ff0019166101001790555b610b5282611260565b8015610b97576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6000808080610bad6020870187612f6c565b63ffffffff1663ffffffff1681526020019081526020016000206000856020016020810190610bdc9190612f89565b6001600160401b03166001600160401b0316815260200190815260200160002054905083606001358114610c525760405162461bcd60e51b815260206004820152601760248201527f4d69736d61746368696e6720737461746520726f6f74730000000000000000006044820152606401610794565b610cf1610c62602085018561293b565b602085013583610c756040880188612fa4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cb7925050506060890189612fa4565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112c392505050565b949350505050565b610d038282611400565b610d405760405162461bcd60e51b815260206004820152600e60248201526d145d5bdc9d5b481b9bdd081b595d60921b6044820152606401610794565b610b97610d506020840184612f6c565b610d606040850160208601612f89565b8460600135611535565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df09190612d4d565b60ff16905080610e0e57505060408051600081526020810190915290565b6000805b82811015610ec357604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015610e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea59190612d0b565b610eaf9083612d9c565b915080610ebb81612db4565b915050610e12565b506000816001600160401b03811115610ede57610ede6129a5565b604051908082528060200260200182016040528015610f07578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f909190612d4d565b60ff1681101561112957604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015611004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110289190612d0b565b905060005b81811015611114576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa1580156110a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c69190612dcf565b600001518585815181106110dc576110dc612d70565b6001600160a01b0390921660209283029190910190910152836110fe81612db4565b945050808061110c90612db4565b91505061102d565b5050808061112190612db4565b915050610f0e565b5090949350505050565b61113b611206565b6001600160a01b0381166111a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610794565b61079d81611260565b60606000805b6101008110156111ff576001811b9150838216156111ef57828160f81b6040516020016111dd929190612ff1565b60405160208183030381529060405292505b6111f881612db4565b90506111af565b5050919050565b6034546001600160a01b031633146107b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610794565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816112bd8482610cf9565b50505050565b6040516bffffffffffffffffffffffff19606087901b16602082015260009081908190611303906034016040516020818303038152906040528688611599565b915091508161134d5760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606401610794565b6000611358826115c2565b905060008061138d8a60405160200161137391815260200190565b604051602081830303815290604052888560400151611599565b91509150816113de5760405162461bcd60e51b815260206004820152601c60248201527f53746f726167652076616c756520646f6573206e6f74206578697374000000006044820152606401610794565b6113ef6113ea82611686565b6116b9565b955050505050505b95945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663292f7a4e61143b866116e8565b438660037f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef0244586040518163ffffffff1660e01b8152600401602060405180830381865afa15801561149d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c19190613020565b6114cc90600261303d565b6114d6919061307f565b6040518563ffffffff1660e01b81526004016114f59493929190613236565b6040805180830381865afa158015611511573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190613395565b63ffffffff83166000818152602081815260408083206001600160401b03871680855290835292819020859055518481529192917fca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8910160405180910390a3505050565b6000606060006115a886611718565b90506115b581868661174a565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906115ef83611825565b9050604051806080016040528061161f8360008151811061161257611612612d70565b6020026020010151611858565b815260200161163a8360018151811061161257611612612d70565b81526020016116628360028151811061165557611655612d70565b602002602001015161185f565b815260200161167d8360038151811061165557611655612d70565b90529392505050565b6040805180820182526000808252602091820152815180830190925282518252808301908201526060906109c890611961565b60008060006020845111156116cf5760206116d2565b83515b60209485015194036008029390931c9392505050565b6000816040516020016116fb91906133c8565b604051602081830303815290604052805190602001209050919050565b6060818051906020012060405160200161173491815260200190565b6040516020818303038152906040529050919050565b600060606000611759856119e8565b9050600080600061176b848a89611ae2565b8151929550909350915015808061177f5750815b6117cb5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e0000000000006044820152606401610794565b6000816117e75760405180602001604052806000815250611813565b611813866117f6600188613420565b8151811061180657611806612d70565b6020026020010151611f06565b919b919a509098505050505050505050565b6040805180820182526000808252602091820152815180830190925282518252808301908201526060906109c890611f30565b60006109c8825b60006021826000015111156118b65760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e0000000000006044820152606401610794565b60008060006118c48561211c565b9194509250905060008160018111156118df576118df613437565b1461192c5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e0000000000006044820152606401610794565b600083866020015161193e9190612d9c565b80519091506020841015610a845760208490036101000a90049695505050505050565b606060008060006119718561211c565b91945092509050600081600181111561198c5761198c613437565b146119d95760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e00000000000000006044820152606401610794565b6113f785602001518484612466565b606060006119f583611825565b9050600081516001600160401b03811115611a1257611a126129a5565b604051908082528060200260200182016040528015611a5757816020015b6040805180820190915260608082526020820152815260200190600190039081611a305790505b50905060005b8251811015611ada576000611a8a848381518110611a7d57611a7d612d70565b6020026020010151611961565b90506040518060400160405280828152602001611aa683611825565b815250838381518110611abb57611abb612d70565b6020026020010181905250508080611ad290612db4565b915050611a5d565b509392505050565b60006060818080611af287612541565b90506000869050600080611b19604051806040016040528060608152602001606081525090565b60005b8c51811015611ede578c8181518110611b3757611b37612d70565b602002602001015191508284611b4d9190612d9c565b9350611b5a600188612d9c565b965083611bb257815180516020909101208514611bad5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b6044820152606401610794565b611c6f565b815151602011611c1457815180516020909101208514611bad5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c206861736800000000006044820152606401610794565b84611c22836000015161267b565b14611c6f5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f646520686173680000000000006044820152606401610794565b611c7b60106001612d9c565b8260200151511415611cf4578551841415611c9557611ede565b6000868581518110611ca957611ca9612d70565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611cd457611cd4612d70565b60200260200101519050611ce7816126a3565b9650600194505050611ecc565b60028260200151511415611e84576000611d0d836126d9565b9050600081600081518110611d2457611d24612d70565b016020015160f81c90506000611d3b60028361344d565b611d4690600261346f565b90506000611d57848360ff166126fd565b90506000611d658b8a6126fd565b90506000611d738383612733565b905060ff851660021480611d8a575060ff85166003145b15611dc457808351148015611d9f5750808251145b15611db157611dae818b612d9c565b99505b50600160ff1b9950611ede945050505050565b60ff85161580611dd7575060ff85166001145b15611e2d5782518114611df75750600160ff1b9950611ede945050505050565b611e1e8860200151600181518110611e1157611e11612d70565b60200260200101516126a3565b9a509750611ecc945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b6064820152608401610794565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e0000006044820152606401610794565b80611ed681612db4565b915050611b1c565b50600160ff1b841486611ef187866126fd565b909e909d50909b509950505050505050505050565b602081015180516060916109c891611f2090600190613420565b81518110611a7d57611a7d612d70565b6060600080611f3e8461211c565b91935090915060019050816001811115611f5a57611f5a613437565b14611fa75760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e0000000000000000006044820152606401610794565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611fc05790505090506000835b865181101561211157602082106120595760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b6064820152608401610794565b6000806120966040518060400160405280858c6000015161207a9190613420565b8152602001858c6020015161208f9190612d9c565b905261211c565b5091509150604051806040016040528083836120b29190612d9c565b8152602001848b602001516120c79190612d9c565b8152508585815181106120dc576120dc612d70565b60209081029190910101526120f2600185612d9c565b93506120fe8183612d9c565b6121089084612d9c565b92505050611fed565b508152949350505050565b6000806000808460000151116121745760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e00000000000000006044820152606401610794565b6020840151805160001a607f811161219957600060016000945094509450505061245f565b60b781116122155760006121ae608083613420565b9050808760000151116122035760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e000000000000006044820152606401610794565b6001955093506000925061245f915050565b60bf811161230457600061222a60b783613420565b90508087600001511161227f5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e006044820152606401610794565b600183015160208290036101000a90046122998183612d9c565b8851116122e85760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e00000000000000006044820152606401610794565b6122f3826001612d9c565b965094506000935061245f92505050565b60f7811161237f57600061231960c083613420565b90508087600001511161236e5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e0000000000000000006044820152606401610794565b60019550935084925061245f915050565b600061238c60f783613420565b9050808760000151116123e15760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e0000006044820152606401610794565b600183015160208290036101000a90046123fb8183612d9c565b8851116124435760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b6044820152606401610794565b61244e826001612d9c565b965094506001935061245f92505050565b9193909250565b60606000826001600160401b03811115612482576124826129a5565b6040519080825280601f01601f1916602001820160405280156124ac576020820181803683370190505b5090508051600014156124c057905061253a565b60006124cc8587612d9c565b90506020820160005b6124e0602087613492565b81101561251757825182526124f6602084612d9c565b9250612503602083612d9c565b91508061250f81612db4565b9150506124d5565b5080519151601f86166020036101000a6000190192831692191691909117905290505b9392505050565b606060008251600261255391906134a6565b6001600160401b0381111561256a5761256a6129a5565b6040519080825280601f01601f191660200182016040528015612594576020820181803683370190505b50905060005b83518110156126745760048482815181106125b7576125b7612d70565b01602001516001600160f81b031916901c826125d48360026134a6565b815181106125e4576125e4612d70565b60200101906001600160f81b031916908160001a905350601084828151811061260f5761260f612d70565b0160200151612621919060f81c61344d565b60f81b826126308360026134a6565b61263b906001612d9c565b8151811061264b5761264b612d70565b60200101906001600160f81b031916908160001a9053508061266c81612db4565b91505061259a565b5092915050565b600060208251101561268f57506020015190565b818060200190518101906109c89190612d0b565b600060606020836000015110156126c4576126bd836127af565b90506126d0565b6126cd83611961565b90505b61253a8161267b565b60606109c86126f88360200151600081518110611a7d57611a7d612d70565b612541565b60608251821061271c57506040805160208101909152600081526109c8565b61253a838384865161272e9190613420565b6127ba565b6000805b8084511180156127475750808351115b8015612798575082818151811061276057612760612d70565b602001015160f81c60f81b6001600160f81b03191684828151811061278757612787612d70565b01602001516001600160f81b031916145b1561253a57806127a781612db4565b915050612737565b60606109c882612910565b6060816127c881601f612d9c565b10156128075760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610794565b826128128382612d9c565b10156128515760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610794565b61285b8284612d9c565b8451101561289f5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610794565b6060821580156128be576040519150600082526020820160405261041d565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156128f75780518352602092830192016128df565b5050858452601f01601f19166040525050949350505050565b60606109c8826020015160008460000151612466565b6001600160a01b038116811461079d57600080fd5b60006020828403121561294d57600080fd5b813561253a81612926565b6020808252825182820181905260009190848201906040850190845b818110156129995783516001600160a01b031683529284019291840191600101612974565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156129dd576129dd6129a5565b60405290565b60006001600160401b03808411156129fd576129fd6129a5565b604051601f8501601f19908116603f01168101908282118183101715612a2557612a256129a5565b81604052809350858152868686011115612a3e57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215612a6a57600080fd5b81356001600160401b03811115612a8057600080fd5b8201601f81018413612a9157600080fd5b610cf1848235602084016129e3565b60008060408385031215612ab357600080fd5b8235612abe81612926565b915060208301356001600160401b0380821115612ada57600080fd5b9084019060608287031215612aee57600080fd5b612af66129bb565b823582811115612b0557600080fd5b83019150601f82018713612b1857600080fd5b612b27878335602085016129e3565b815260208301356020820152604083013560408201528093505050509250929050565b63ffffffff8116811461079d57600080fd5b80356001600160401b0381168114612b7357600080fd5b919050565b60008060408385031215612b8b57600080fd5b8235612b9681612b4a565b9150612ba460208401612b5c565b90509250929050565b600060808284031215612bbf57600080fd5b50919050565b60008060008060c08587031215612bdb57600080fd5b612be58686612bad565b935060808501356001600160401b0380821115612c0157600080fd5b612c0d88838901612bad565b945060a0870135915080821115612c2357600080fd5b818701915087601f830112612c3757600080fd5b813581811115612c4657600080fd5b886020828501011115612c5857600080fd5b95989497505060200194505050565b60008060a08385031215612c7a57600080fd5b612c848484612bad565b915060808301356001600160401b03811115612c9f57600080fd5b612cab85828601612bad565b9150509250929050565b60008060a08385031215612cc857600080fd5b612cd28484612bad565b915060808301356001600160401b03811115612ced57600080fd5b83016101808186031215612d0057600080fd5b809150509250929050565b600060208284031215612d1d57600080fd5b5051919050565b600060208284031215612d3657600080fd5b81516001600160c01b038116811461253a57600080fd5b600060208284031215612d5f57600080fd5b815160ff8116811461253a57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612daf57612daf612d86565b500190565b6000600019821415612dc857612dc8612d86565b5060010190565b600060408284031215612de157600080fd5b604051604081018181106001600160401b0382111715612e0357612e036129a5565b6040528251612e1181612926565b815260208301516bffffffffffffffffffffffff81168114612e3257600080fd5b60208201529392505050565b60005b83811015612e59578181015183820152602001612e41565b838111156112bd5750506000910152565b60008151808452612e82816020860160208601612e3e565b601f01601f19169290920160200192915050565b60208152600061253a6020830184612e6a565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b60018060a01b0383168152604060208201526000825160606040840152612f4b60a0840182612e6a565b90506020840151606084015260408401516080840152809150509392505050565b600060208284031215612f7e57600080fd5b813561253a81612b4a565b600060208284031215612f9b57600080fd5b61253a82612b5c565b6000808335601e19843603018112612fbb57600080fd5b8301803591506001600160401b03821115612fd557600080fd5b602001915036819003821315612fea57600080fd5b9250929050565b60008351613003818460208801612e3e565b6001600160f81b0319939093169190920190815260010192915050565b60006020828403121561303257600080fd5b815161253a81612b4a565b600063ffffffff8083168185168183048111821515161561306057613060612d86565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff8084168061309657613096613069565b92169190910492915050565b6000808335601e198436030181126130b957600080fd5b83016020810192503590506001600160401b038111156130d857600080fd5b8060051b3603831315612fea57600080fd5b8183526000602080850194508260005b8581101561312557813561310d81612b4a565b63ffffffff16875295820195908201906001016130fa565b509495945050505050565b6000808335601e1984360301811261314757600080fd5b83016020810192503590506001600160401b0381111561316657600080fd5b8060061b3603831315612fea57600080fd5b81835260208301925060008160005b848110156131af57813586526020808301359087015260409586019590910190600101613187565b5093949350505050565b604081833760408201600081526040808301823750600060808301525050565b81835260006020808501808196508560051b810191508460005b8781101561322957828403895261320a82886130a2565b6132158682846130ea565b9a87019a95505050908401906001016131f3565b5091979650505050505050565b84815260a06020820152600160a0820152600060c082015263ffffffff8416604082015260e06060820152600061326d84856130a2565b61018060e0850152613284610260850182846130ea565b9150506132946020860186613130565b60df1980868503016101008701526132ad848385613178565b93506132bc6040890189613130565b935091506101208187860301818801526132d7858585613178565b945061014093506132ed84880160608b016131b9565b60e08901356101c08801526101008901356101e0880152613310818a018a6130a2565b93509050818786030161020088015261332a8584836130ea565b945050613339838901896130a2565b9350915080868503016102208701526133538484846130ea565b93506133636101608901896130a2565b9350915080868503016102408701525061337e8383836131d9565b93505050506113f7608083018463ffffffff169052565b600080604083850312156133a857600080fd5b825180151581146133b857600080fd5b6020939093015192949293505050565b6080810182356133d781612b4a565b63ffffffff1682526133eb60208401612b5c565b6001600160401b0380821660208501528061340860408701612b5c565b16604085015250506060830135606083015292915050565b60008282101561343257613432612d86565b500390565b634e487b7160e01b600052602160045260246000fd5b600060ff83168061346057613460613069565b8060ff84160691505092915050565b600060ff821660ff84168082101561348957613489612d86565b90039392505050565b6000826134a1576134a1613069565b500490565b60008160001904831182151516156134c0576134c0612d86565b50029056fea26469706673582212201ca6cf3a56e4dfa400892ebaaf664bb3610672871b64ffcdff221108aa698db164736f6c634300080c0033",
}

// ContractSFFLServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractSFFLServiceManagerMetaData.ABI instead.
var ContractSFFLServiceManagerABI = ContractSFFLServiceManagerMetaData.ABI

// ContractSFFLServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractSFFLServiceManagerMetaData.Bin instead.
var ContractSFFLServiceManagerBin = ContractSFFLServiceManagerMetaData.Bin

// DeployContractSFFLServiceManager deploys a new Ethereum contract, binding an instance of ContractSFFLServiceManager to it.
func DeployContractSFFLServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _delegationManager common.Address, _registryCoordinator common.Address, _stakeRegistry common.Address, _taskManager common.Address) (common.Address, *types.Transaction, *ContractSFFLServiceManager, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractSFFLServiceManagerBin), backend, _delegationManager, _registryCoordinator, _stakeRegistry, _taskManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// ContractSFFLServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractSFFLServiceManager struct {
	ContractSFFLServiceManagerCaller     // Read-only binding to the contract
	ContractSFFLServiceManagerTransactor // Write-only binding to the contract
	ContractSFFLServiceManagerFilterer   // Log filterer for contract events
}

// ContractSFFLServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractSFFLServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSFFLServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSFFLServiceManagerSession struct {
	Contract     *ContractSFFLServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractSFFLServiceManagerCallerSession struct {
	Contract *ContractSFFLServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractSFFLServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractSFFLServiceManagerTransactorSession struct {
	Contract     *ContractSFFLServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractSFFLServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractSFFLServiceManagerRaw struct {
	Contract *ContractSFFLServiceManager // Generic contract binding to access the raw methods on
}

// ContractSFFLServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerCallerRaw struct {
	Contract *ContractSFFLServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractSFFLServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractSFFLServiceManagerTransactorRaw struct {
	Contract *ContractSFFLServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractSFFLServiceManager creates a new instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManager(address common.Address, backend bind.ContractBackend) (*ContractSFFLServiceManager, error) {
	contract, err := bindContractSFFLServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManager{ContractSFFLServiceManagerCaller: ContractSFFLServiceManagerCaller{contract: contract}, ContractSFFLServiceManagerTransactor: ContractSFFLServiceManagerTransactor{contract: contract}, ContractSFFLServiceManagerFilterer: ContractSFFLServiceManagerFilterer{contract: contract}}, nil
}

// NewContractSFFLServiceManagerCaller creates a new read-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractSFFLServiceManagerCaller, error) {
	contract, err := bindContractSFFLServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerCaller{contract: contract}, nil
}

// NewContractSFFLServiceManagerTransactor creates a new write-only instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractSFFLServiceManagerTransactor, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerTransactor{contract: contract}, nil
}

// NewContractSFFLServiceManagerFilterer creates a new log filterer instance of ContractSFFLServiceManager, bound to a specific deployed contract.
func NewContractSFFLServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractSFFLServiceManagerFilterer, error) {
	contract, err := bindContractSFFLServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerFilterer{contract: contract}, nil
}

// bindContractSFFLServiceManager binds a generic wrapper to an already deployed contract.
func bindContractSFFLServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractSFFLServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.ContractSFFLServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractSFFLServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.contract.Transact(opts, method, params...)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractSFFLServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractSFFLServiceManager.Contract.GetRestakeableStrategies(&_ContractSFFLServiceManager.CallOpts)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStateRoot(opts *bind.CallOpts, rollupId uint32, blockHeight uint64) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStateRoot", rollupId, blockHeight)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStateRoot is a free data retrieval call binding the contract method 0xb3a9e53b.
//
// Solidity: function getStateRoot(uint32 rollupId, uint64 blockHeight) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStateRoot(rollupId uint32, blockHeight uint64) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStateRoot(&_ContractSFFLServiceManager.CallOpts, rollupId, blockHeight)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) GetStorageValue(opts *bind.CallOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "getStorageValue", message, proofParams)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// GetStorageValue is a free data retrieval call binding the contract method 0xccd3bd9e.
//
// Solidity: function getStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams) view returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) GetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams) ([32]byte, error) {
	return _ContractSFFLServiceManager.Contract.GetStorageValue(&_ContractSFFLServiceManager.CallOpts, message, proofParams)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.Owner(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCaller) TaskManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractSFFLServiceManager.contract.Call(opts, &out, "taskManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// TaskManager is a free data retrieval call binding the contract method 0xa50a640e.
//
// Solidity: function taskManager() view returns(address)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerCallerSession) TaskManager() (common.Address, error) {
	return _ContractSFFLServiceManager.Contract.TaskManager(&_ContractSFFLServiceManager.CallOpts)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractSFFLServiceManager.TransactOpts, operator)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) FreezeOperator(opts *bind.TransactOpts, operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "freezeOperator", operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.FreezeOperator(&_ContractSFFLServiceManager.TransactOpts, operatorAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) Initialize(opts *bind.TransactOpts, initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "initialize", initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) Initialize(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address initialOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) Initialize(initialOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.Initialize(&_ContractSFFLServiceManager.TransactOpts, initialOwner)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RegisterOperatorToAVS(&_ContractSFFLServiceManager.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.RenounceOwnership(&_ContractSFFLServiceManager.TransactOpts)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) SetMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "setMetadataURI", _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.SetMetadataURI(&_ContractSFFLServiceManager.TransactOpts, _metadataURI)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.TransferOwnership(&_ContractSFFLServiceManager.TransactOpts, newOwner)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateAndGetStorageValue(opts *bind.TransactOpts, message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateAndGetStorageValue", message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateAndGetStorageValue is a paid mutator transaction binding the contract method 0xb708c083.
//
// Solidity: function updateAndGetStorageValue((uint32,uint64,uint64,bytes32) message, (address,bytes32,bytes,bytes) proofParams, bytes agreement) returns(bytes32)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateAndGetStorageValue(message StateRootUpdateMessage, proofParams SFFLRegistryBaseProofParams, agreement []byte) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateAndGetStorageValue(&_ContractSFFLServiceManager.TransactOpts, message, proofParams, agreement)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0xd5b206a3.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactor) UpdateStateRoot(opts *bind.TransactOpts, message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.contract.Transact(opts, "updateStateRoot", message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0xd5b206a3.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// UpdateStateRoot is a paid mutator transaction binding the contract method 0xd5b206a3.
//
// Solidity: function updateStateRoot((uint32,uint64,uint64,bytes32) message, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerTransactorSession) UpdateStateRoot(message StateRootUpdateMessage, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractSFFLServiceManager.Contract.UpdateStateRoot(&_ContractSFFLServiceManager.TransactOpts, message, nonSignerStakesAndSignature)
}

// ContractSFFLServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitializedIterator struct {
	Event *ContractSFFLServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerInitialized represents a Initialized event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractSFFLServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerInitializedIterator{contract: _ContractSFFLServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerInitialized)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractSFFLServiceManagerInitialized, error) {
	event := new(ContractSFFLServiceManagerInitialized)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferredIterator struct {
	Event *ContractSFFLServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractSFFLServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerOwnershipTransferredIterator{contract: _ContractSFFLServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerOwnershipTransferred)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractSFFLServiceManagerOwnershipTransferred, error) {
	event := new(ContractSFFLServiceManagerOwnershipTransferred)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSFFLServiceManagerStateRootUpdatedIterator is returned from FilterStateRootUpdated and is used to iterate over the raw logs and unpacked data for StateRootUpdated events raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdatedIterator struct {
	Event *ContractSFFLServiceManagerStateRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSFFLServiceManagerStateRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSFFLServiceManagerStateRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSFFLServiceManagerStateRootUpdated represents a StateRootUpdated event raised by the ContractSFFLServiceManager contract.
type ContractSFFLServiceManagerStateRootUpdated struct {
	RollupId    uint32
	BlockHeight uint64
	StateRoot   [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStateRootUpdated is a free log retrieval operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) FilterStateRootUpdated(opts *bind.FilterOpts, rollupId []uint32, blockHeight []uint64) (*ContractSFFLServiceManagerStateRootUpdatedIterator, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.FilterLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &ContractSFFLServiceManagerStateRootUpdatedIterator{contract: _ContractSFFLServiceManager.contract, event: "StateRootUpdated", logs: logs, sub: sub}, nil
}

// WatchStateRootUpdated is a free log subscription operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) WatchStateRootUpdated(opts *bind.WatchOpts, sink chan<- *ContractSFFLServiceManagerStateRootUpdated, rollupId []uint32, blockHeight []uint64) (event.Subscription, error) {

	var rollupIdRule []interface{}
	for _, rollupIdItem := range rollupId {
		rollupIdRule = append(rollupIdRule, rollupIdItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _ContractSFFLServiceManager.contract.WatchLogs(opts, "StateRootUpdated", rollupIdRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSFFLServiceManagerStateRootUpdated)
				if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateRootUpdated is a log parse operation binding the contract event 0xca7171570f4ca232f925661b810636124eaf784a25b7c14e6b34c95b814dfdd8.
//
// Solidity: event StateRootUpdated(uint32 indexed rollupId, uint64 indexed blockHeight, bytes32 stateRoot)
func (_ContractSFFLServiceManager *ContractSFFLServiceManagerFilterer) ParseStateRootUpdated(log types.Log) (*ContractSFFLServiceManagerStateRootUpdated, error) {
	event := new(ContractSFFLServiceManagerStateRootUpdated)
	if err := _ContractSFFLServiceManager.contract.UnpackLog(event, "StateRootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
